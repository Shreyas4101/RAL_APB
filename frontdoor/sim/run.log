# vsim -vopt work.tb "+UVM_TESTNAME=freg_test" -voptargs="+acc=npr" -assertdebug -l run.log -coverage -c -do "coverage save -onexit -assert -directive -cvg -codeAll coverage.ucdb; coverage report -detail;run -all; exit" 
# Start time: 16:03:18 on Aug 05,2025
# ** Note: (vsim-3812) Design is being optimized...
# //  Questa Sim
# //  Version 10.6c linux Jul 25 2017
# //
# //  Copyright 1991-2017 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading mtiUvm.uvm_pkg
# Loading work.ral_top_sv_unit(fast)
# Loading work.tb(fast)
# Loading work.top(fast)
# Loading work.ral_interface(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.ral_interface(fast)
# Loading /tools/mentor/questasim_10.6c/questasim/uvm-1.1d/linux/uvm_dpi.so
# coverage save -onexit -assert -directive -cvg -codeAll coverage.ucdb
#  coverage report -detail
# Coverage Report by file with details
# 
# =================================================================================
# === File: ../src/testbench/../rtl/design.v
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           16         0        16       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/../rtl/design.v --
# 
#     1                                                module top 
#     2                                                  (  
#     3                                                    input               pclk,
#     4                                                    input               presetn,
#     5                                                    input   [31:0]      paddr,
#     6                                                    input   [31:0]      pwdata,
#     7                                                    input               psel,
#     8                                                    input               pwrite,
#     9                                                    input               penable,
#     10                                                   output  [31:0]      prdata
#     11                                                 );
#     12                                               
#     13                                                 reg [3:0]  cntrl = 0; ///   cntrl :  [reg4 reg3 reg2 reg1]
#     14                                                 reg [31:0] reg1  = 0; //    datainput 1
#     15                                                 reg [31:0] reg2  = 0; ///   datainput 2
#     16                                                 reg [31:0] reg3  = 0; ///   datainput 3
#     17                                                 reg [31:0] reg4  = 0; //    datainput 4
#     18                                               
#     19                                                 reg [31:0] rdata_tmp = 0;    
#     20              1                    ***0***     always @ (posedge pclk) 
#     21                                                   begin
#     22                                                     if( !presetn ) 
#     23                                                       begin
#     24              1                    ***0***               cntrl    <= 4'h0;
#     25              1                    ***0***               reg1     <= 32'h5A5A_5555;
#     26              1                    ***0***               reg2     <= 32'h1234_9876;
#     27              1                    ***0***               reg3     <= 32'hA5A5_0000;;
#     28              1                    ***0***               reg4     <= 32'h0000_FFFF;
#     29                                               //          rdata_tmp <= 32'h00000000;
#     30                                                       end
#     31                                                     else if( psel && penable && pwrite )
#     32                                                       begin
#     33                                                         case( paddr )
#     34              1                    ***0***                 'h0     : cntrl <= pwdata;
#     35              1                    ***0***                 'h8     : reg2  <= pwdata;
#     36              1                    ***0***                 'hc     : reg3  <= pwdata;
#     37              1                    ***0***                 'h10    : reg4  <= pwdata;
#     38                                                         endcase
#     39                                                       end
#     40                                                     else if (psel && penable && !pwrite )
#     41                                                       begin
#     42                                                         case( paddr )
#     43              1                    ***0***                 'h0     : rdata_tmp <= {28'h0000000,cntrl};
#     44              1                    ***0***                 'h4     : rdata_tmp <= reg1;
#     45              1                    ***0***                 'h8     : rdata_tmp <= reg2;
#     46              1                    ***0***                 'hc     : rdata_tmp <= reg3;
#     47              1                    ***0***                 'h10    : rdata_tmp <= reg4;
#     48              1                    ***0***                 default : rdata_tmp <= 32'h00000000;
#     49                                                         endcase 
#     50                                                       end      
#     51                                                   end   
#     52                                                 assign prdata =  rdata_tmp; 
#     53                                               endmodule
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        15         0        15       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/../rtl/design.v --
# 
# ------------------------------------IF Branch------------------------------------
#     22                                   ***0***     Count coming in to IF
#     22              1                    ***0***           if( !presetn ) 
#     31              1                    ***0***           else if( psel && penable && pwrite )
#     40              1                    ***0***           else if (psel && penable && !pwrite )
#                                          ***0***     All False Count
# Branch totals: 0 hits of 4 branches = 0.0%
# 
# ------------------------------------CASE Branch------------------------------------
#     33                                   ***0***     Count coming in to CASE
#     34              1                    ***0***                 'h0     : cntrl <= pwdata;
#     35              1                    ***0***                 'h8     : reg2  <= pwdata;
#     36              1                    ***0***                 'hc     : reg3  <= pwdata;
#     37              1                    ***0***                 'h10    : reg4  <= pwdata;
#                                          ***0***     All False Count
# Branch totals: 0 hits of 5 branches = 0.0%
# 
# ------------------------------------CASE Branch------------------------------------
#     42                                   ***0***     Count coming in to CASE
#     43              1                    ***0***                 'h0     : rdata_tmp <= {28'h0000000,cntrl};
#     44              1                    ***0***                 'h4     : rdata_tmp <= reg1;
#     45              1                    ***0***                 'h8     : rdata_tmp <= reg2;
#     46              1                    ***0***                 'hc     : rdata_tmp <= reg3;
#     47              1                    ***0***                 'h10    : rdata_tmp <= reg4;
#     48              1                    ***0***                 default : rdata_tmp <= 32'h00000000;
# Branch totals: 0 hits of 6 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              6         0         6       0.0
# 
# ================================Condition Details================================
# 
# Condition Coverage for file ../src/testbench/../rtl/design.v --
# 
# ----------------Focused Condition View-------------------
# Line       31 Item    1  ((psel && penable) && pwrite)
# Condition totals: 0 of 3 input terms covered = 0.0%
# 
#   Input Term   Covered  Reason for no coverage   Hint
#  -----------  --------  -----------------------  --------------
#         psel         N  No hits                  Hit '_0' and '_1'
#      penable         N  No hits                  Hit '_0' and '_1'
#       pwrite         N  No hits                  Hit '_0' and '_1'
# 
#      Rows:       Hits  FEC Target            Non-masking condition(s)      
#  ---------  ---------  --------------------  -------------------------     
#   Row   1:    ***0***  psel_0                -                             
#   Row   2:    ***0***  psel_1                (pwrite && penable)           
#   Row   3:    ***0***  penable_0             psel                          
#   Row   4:    ***0***  penable_1             (pwrite && psel)              
#   Row   5:    ***0***  pwrite_0              (psel && penable)             
#   Row   6:    ***0***  pwrite_1              (psel && penable)             
# 
# ----------------Focused Condition View-------------------
# Line       40 Item    1  ((psel && penable) && ~pwrite)
# Condition totals: 0 of 3 input terms covered = 0.0%
# 
#   Input Term   Covered  Reason for no coverage   Hint
#  -----------  --------  -----------------------  --------------
#         psel         N  No hits                  Hit '_0' and '_1'
#      penable         N  No hits                  Hit '_0' and '_1'
#       pwrite         N  No hits                  Hit '_0' and '_1'
# 
#      Rows:       Hits  FEC Target            Non-masking condition(s)      
#  ---------  ---------  --------------------  -------------------------     
#   Row   1:    ***0***  psel_0                -                             
#   Row   2:    ***0***  psel_1                (~pwrite && penable)          
#   Row   3:    ***0***  penable_0             psel                          
#   Row   4:    ***0***  penable_1             (~pwrite && psel)             
#   Row   5:    ***0***  pwrite_0              (psel && penable)             
#   Row   6:    ***0***  pwrite_1              (psel && penable)             
# 
# 
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                    530         0       530       0.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/../rtl/design.v --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
#           3                                   pclk           0           0        0.00 
#           4                                presetn           0           0        0.00 
#           5                               paddr[9]           0           0        0.00 
#           5                               paddr[8]           0           0        0.00 
#           5                               paddr[7]           0           0        0.00 
#           5                               paddr[6]           0           0        0.00 
#           5                               paddr[5]           0           0        0.00 
#           5                               paddr[4]           0           0        0.00 
#           5                               paddr[3]           0           0        0.00 
#           5                              paddr[31]           0           0        0.00 
#           5                              paddr[30]           0           0        0.00 
#           5                               paddr[2]           0           0        0.00 
#           5                              paddr[29]           0           0        0.00 
#           5                              paddr[28]           0           0        0.00 
#           5                              paddr[27]           0           0        0.00 
#           5                              paddr[26]           0           0        0.00 
#           5                              paddr[25]           0           0        0.00 
#           5                              paddr[24]           0           0        0.00 
#           5                              paddr[23]           0           0        0.00 
#           5                              paddr[22]           0           0        0.00 
#           5                              paddr[21]           0           0        0.00 
#           5                              paddr[20]           0           0        0.00 
#           5                               paddr[1]           0           0        0.00 
#           5                              paddr[19]           0           0        0.00 
#           5                              paddr[18]           0           0        0.00 
#           5                              paddr[17]           0           0        0.00 
#           5                              paddr[16]           0           0        0.00 
#           5                              paddr[15]           0           0        0.00 
#           5                              paddr[14]           0           0        0.00 
#           5                              paddr[13]           0           0        0.00 
#           5                              paddr[12]           0           0        0.00 
#           5                              paddr[11]           0           0        0.00 
#           5                              paddr[10]           0           0        0.00 
#           5                               paddr[0]           0           0        0.00 
#           6                              pwdata[9]           0           0        0.00 
#           6                              pwdata[8]           0           0        0.00 
#           6                              pwdata[7]           0           0        0.00 
#           6                              pwdata[6]           0           0        0.00 
#           6                              pwdata[5]           0           0        0.00 
#           6                              pwdata[4]           0           0        0.00 
#           6                              pwdata[3]           0           0        0.00 
#           6                             pwdata[31]           0           0        0.00 
#           6                             pwdata[30]           0           0        0.00 
#           6                              pwdata[2]           0           0        0.00 
#           6                             pwdata[29]           0           0        0.00 
#           6                             pwdata[28]           0           0        0.00 
#           6                             pwdata[27]           0           0        0.00 
#           6                             pwdata[26]           0           0        0.00 
#           6                             pwdata[25]           0           0        0.00 
#           6                             pwdata[24]           0           0        0.00 
#           6                             pwdata[23]           0           0        0.00 
#           6                             pwdata[22]           0           0        0.00 
#           6                             pwdata[21]           0           0        0.00 
#           6                             pwdata[20]           0           0        0.00 
#           6                              pwdata[1]           0           0        0.00 
#           6                             pwdata[19]           0           0        0.00 
#           6                             pwdata[18]           0           0        0.00 
#           6                             pwdata[17]           0           0        0.00 
#           6                             pwdata[16]           0           0        0.00 
#           6                             pwdata[15]           0           0        0.00 
#           6                             pwdata[14]           0           0        0.00 
#           6                             pwdata[13]           0           0        0.00 
#           6                             pwdata[12]           0           0        0.00 
#           6                             pwdata[11]           0           0        0.00 
#           6                             pwdata[10]           0           0        0.00 
#           6                              pwdata[0]           0           0        0.00 
#           7                                   psel           0           0        0.00 
#           8                                 pwrite           0           0        0.00 
#           9                                penable           0           0        0.00 
#          10                              prdata[9]           0           0        0.00 
#          10                              prdata[8]           0           0        0.00 
#          10                              prdata[7]           0           0        0.00 
#          10                              prdata[6]           0           0        0.00 
#          10                              prdata[5]           0           0        0.00 
#          10                              prdata[4]           0           0        0.00 
#          10                              prdata[3]           0           0        0.00 
#          10                             prdata[31]           0           0        0.00 
#          10                             prdata[30]           0           0        0.00 
#          10                              prdata[2]           0           0        0.00 
#          10                             prdata[29]           0           0        0.00 
#          10                             prdata[28]           0           0        0.00 
#          10                             prdata[27]           0           0        0.00 
#          10                             prdata[26]           0           0        0.00 
#          10                             prdata[25]           0           0        0.00 
#          10                             prdata[24]           0           0        0.00 
#          10                             prdata[23]           0           0        0.00 
#          10                             prdata[22]           0           0        0.00 
#          10                             prdata[21]           0           0        0.00 
#          10                             prdata[20]           0           0        0.00 
#          10                              prdata[1]           0           0        0.00 
#          10                             prdata[19]           0           0        0.00 
#          10                             prdata[18]           0           0        0.00 
#          10                             prdata[17]           0           0        0.00 
#          10                             prdata[16]           0           0        0.00 
#          10                             prdata[15]           0           0        0.00 
#          10                             prdata[14]           0           0        0.00 
#          10                             prdata[13]           0           0        0.00 
#          10                             prdata[12]           0           0        0.00 
#          10                             prdata[11]           0           0        0.00 
#          10                             prdata[10]           0           0        0.00 
#          10                              prdata[0]           0           0        0.00 
#          13                               cntrl[3]           0           0        0.00 
#          13                               cntrl[2]           0           0        0.00 
#          13                               cntrl[1]           0           0        0.00 
#          13                               cntrl[0]           0           0        0.00 
#          14                                reg1[9]           0           0        0.00 
#          14                                reg1[8]           0           0        0.00 
#          14                                reg1[7]           0           0        0.00 
#          14                                reg1[6]           0           0        0.00 
#          14                                reg1[5]           0           0        0.00 
#          14                                reg1[4]           0           0        0.00 
#          14                                reg1[3]           0           0        0.00 
#          14                               reg1[31]           0           0        0.00 
#          14                               reg1[30]           0           0        0.00 
#          14                                reg1[2]           0           0        0.00 
#          14                               reg1[29]           0           0        0.00 
#          14                               reg1[28]           0           0        0.00 
#          14                               reg1[27]           0           0        0.00 
#          14                               reg1[26]           0           0        0.00 
#          14                               reg1[25]           0           0        0.00 
#          14                               reg1[24]           0           0        0.00 
#          14                               reg1[23]           0           0        0.00 
#          14                               reg1[22]           0           0        0.00 
#          14                               reg1[21]           0           0        0.00 
#          14                               reg1[20]           0           0        0.00 
#          14                                reg1[1]           0           0        0.00 
#          14                               reg1[19]           0           0        0.00 
#          14                               reg1[18]           0           0        0.00 
#          14                               reg1[17]           0           0        0.00 
#          14                               reg1[16]           0           0        0.00 
#          14                               reg1[15]           0           0        0.00 
#          14                               reg1[14]           0           0        0.00 
#          14                               reg1[13]           0           0        0.00 
#          14                               reg1[12]           0           0        0.00 
#          14                               reg1[11]           0           0        0.00 
#          14                               reg1[10]           0           0        0.00 
#          14                                reg1[0]           0           0        0.00 
#          15                                reg2[9]           0           0        0.00 
#          15                                reg2[8]           0           0        0.00 
#          15                                reg2[7]           0           0        0.00 
#          15                                reg2[6]           0           0        0.00 
#          15                                reg2[5]           0           0        0.00 
#          15                                reg2[4]           0           0        0.00 
#          15                                reg2[3]           0           0        0.00 
#          15                               reg2[31]           0           0        0.00 
#          15                               reg2[30]           0           0        0.00 
#          15                                reg2[2]           0           0        0.00 
#          15                               reg2[29]           0           0        0.00 
#          15                               reg2[28]           0           0        0.00 
#          15                               reg2[27]           0           0        0.00 
#          15                               reg2[26]           0           0        0.00 
#          15                               reg2[25]           0           0        0.00 
#          15                               reg2[24]           0           0        0.00 
#          15                               reg2[23]           0           0        0.00 
#          15                               reg2[22]           0           0        0.00 
#          15                               reg2[21]           0           0        0.00 
#          15                               reg2[20]           0           0        0.00 
#          15                                reg2[1]           0           0        0.00 
#          15                               reg2[19]           0           0        0.00 
#          15                               reg2[18]           0           0        0.00 
#          15                               reg2[17]           0           0        0.00 
#          15                               reg2[16]           0           0        0.00 
#          15                               reg2[15]           0           0        0.00 
#          15                               reg2[14]           0           0        0.00 
#          15                               reg2[13]           0           0        0.00 
#          15                               reg2[12]           0           0        0.00 
#          15                               reg2[11]           0           0        0.00 
#          15                               reg2[10]           0           0        0.00 
#          15                                reg2[0]           0           0        0.00 
#          16                                reg3[9]           0           0        0.00 
#          16                                reg3[8]           0           0        0.00 
#          16                                reg3[7]           0           0        0.00 
#          16                                reg3[6]           0           0        0.00 
#          16                                reg3[5]           0           0        0.00 
#          16                                reg3[4]           0           0        0.00 
#          16                                reg3[3]           0           0        0.00 
#          16                               reg3[31]           0           0        0.00 
#          16                               reg3[30]           0           0        0.00 
#          16                                reg3[2]           0           0        0.00 
#          16                               reg3[29]           0           0        0.00 
#          16                               reg3[28]           0           0        0.00 
#          16                               reg3[27]           0           0        0.00 
#          16                               reg3[26]           0           0        0.00 
#          16                               reg3[25]           0           0        0.00 
#          16                               reg3[24]           0           0        0.00 
#          16                               reg3[23]           0           0        0.00 
#          16                               reg3[22]           0           0        0.00 
#          16                               reg3[21]           0           0        0.00 
#          16                               reg3[20]           0           0        0.00 
#          16                                reg3[1]           0           0        0.00 
#          16                               reg3[19]           0           0        0.00 
#          16                               reg3[18]           0           0        0.00 
#          16                               reg3[17]           0           0        0.00 
#          16                               reg3[16]           0           0        0.00 
#          16                               reg3[15]           0           0        0.00 
#          16                               reg3[14]           0           0        0.00 
#          16                               reg3[13]           0           0        0.00 
#          16                               reg3[12]           0           0        0.00 
#          16                               reg3[11]           0           0        0.00 
#          16                               reg3[10]           0           0        0.00 
#          16                                reg3[0]           0           0        0.00 
#          17                                reg4[9]           0           0        0.00 
#          17                                reg4[8]           0           0        0.00 
#          17                                reg4[7]           0           0        0.00 
#          17                                reg4[6]           0           0        0.00 
#          17                                reg4[5]           0           0        0.00 
#          17                                reg4[4]           0           0        0.00 
#          17                                reg4[3]           0           0        0.00 
#          17                               reg4[31]           0           0        0.00 
#          17                               reg4[30]           0           0        0.00 
#          17                                reg4[2]           0           0        0.00 
#          17                               reg4[29]           0           0        0.00 
#          17                               reg4[28]           0           0        0.00 
#          17                               reg4[27]           0           0        0.00 
#          17                               reg4[26]           0           0        0.00 
#          17                               reg4[25]           0           0        0.00 
#          17                               reg4[24]           0           0        0.00 
#          17                               reg4[23]           0           0        0.00 
#          17                               reg4[22]           0           0        0.00 
#          17                               reg4[21]           0           0        0.00 
#          17                               reg4[20]           0           0        0.00 
#          17                                reg4[1]           0           0        0.00 
#          17                               reg4[19]           0           0        0.00 
#          17                               reg4[18]           0           0        0.00 
#          17                               reg4[17]           0           0        0.00 
#          17                               reg4[16]           0           0        0.00 
#          17                               reg4[15]           0           0        0.00 
#          17                               reg4[14]           0           0        0.00 
#          17                               reg4[13]           0           0        0.00 
#          17                               reg4[12]           0           0        0.00 
#          17                               reg4[11]           0           0        0.00 
#          17                               reg4[10]           0           0        0.00 
#          17                                reg4[0]           0           0        0.00 
#          19                           rdata_tmp[9]           0           0        0.00 
#          19                           rdata_tmp[8]           0           0        0.00 
#          19                           rdata_tmp[7]           0           0        0.00 
#          19                           rdata_tmp[6]           0           0        0.00 
#          19                           rdata_tmp[5]           0           0        0.00 
#          19                           rdata_tmp[4]           0           0        0.00 
#          19                           rdata_tmp[3]           0           0        0.00 
#          19                          rdata_tmp[31]           0           0        0.00 
#          19                          rdata_tmp[30]           0           0        0.00 
#          19                           rdata_tmp[2]           0           0        0.00 
#          19                          rdata_tmp[29]           0           0        0.00 
#          19                          rdata_tmp[28]           0           0        0.00 
#          19                          rdata_tmp[27]           0           0        0.00 
#          19                          rdata_tmp[26]           0           0        0.00 
#          19                          rdata_tmp[25]           0           0        0.00 
#          19                          rdata_tmp[24]           0           0        0.00 
#          19                          rdata_tmp[23]           0           0        0.00 
#          19                          rdata_tmp[22]           0           0        0.00 
#          19                          rdata_tmp[21]           0           0        0.00 
#          19                          rdata_tmp[20]           0           0        0.00 
#          19                           rdata_tmp[1]           0           0        0.00 
#          19                          rdata_tmp[19]           0           0        0.00 
#          19                          rdata_tmp[18]           0           0        0.00 
#          19                          rdata_tmp[17]           0           0        0.00 
#          19                          rdata_tmp[16]           0           0        0.00 
#          19                          rdata_tmp[15]           0           0        0.00 
#          19                          rdata_tmp[14]           0           0        0.00 
#          19                          rdata_tmp[13]           0           0        0.00 
#          19                          rdata_tmp[12]           0           0        0.00 
#          19                          rdata_tmp[11]           0           0        0.00 
#          19                          rdata_tmp[10]           0           0        0.00 
#          19                           rdata_tmp[0]           0           0        0.00 
# 
# Total Node Count     =        265 
# Toggled Node Count   =          0 
# Untoggled Node Count =        265 
# 
# Toggle Coverage      =        0.0% (0 of 530 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_adapter.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           20         0        20       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_adapter.sv --
# 
#     1                                                class ral_adapter extends uvm_reg_adapter;
#     2               1                    ***0***       `uvm_object_utils(ral_adapter)
#     2               2                    ***0***     
#     2               3                    ***0***     
#     2               4                    ***0***     
#     2               5                    ***0***     
#     2               6                    ***0***     
#     2               7                    ***0***     
#     2               8                    ***0***     
#     2               9                    ***0***     
#     2              10                    ***0***     
#     3                                                  
#     4                                                  function new(string name = "ral_adapter");
#     5               1                    ***0***         super.new(name);
#     6                                                  endfunction
#     7                                                  
#     8                                                  function uvm_sequence_item reg2bus(const ref uvm_reg_bus_op rw);
#     9                                                    ral_seq_item item;
#     10              1                    ***0***         item = ral_seq_item::type_id::create("item");
#     11              1                    ***0***         item.pwrite = (rw.kind == UVM_WRITE)?1'b1:1'b0;
#     12              1                    ***0***         item.paddr = rw.addr;
#     13              1                    ***0***         item.pwdata = rw.data;
#     14              1                    ***0***         return item;
#     15                                                 endfunction
#     16                                                 
#     17                                                 function void bus2reg(uvm_sequence_item bus_item,ref uvm_reg_bus_op rw);
#     18                                                   ral_seq_item item;
#     19                                                   assert ($cast(item,bus_item));
#     20              1                    ***0***         rw.kind = (item.pwrite == 1'b1)?UVM_WRITE:UVM_READ;
#     21              1                    ***0***         rw.data = (item.pwrite == 1'b1)?item.pwdata:item.prdata;
#     22              1                    ***0***         rw.addr = item.paddr;
#     23              1                    ***0***         rw.status = UVM_IS_OK;
#     24                                                 endfunction
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        14         0        14       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_adapter.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     2                                    ***0***     Count coming in to IF
#     2               1                    ***0***       `uvm_object_utils(ral_adapter)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     2                                    ***0***     Count coming in to IF
#     2               2                    ***0***       `uvm_object_utils(ral_adapter)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     2                                    ***0***     Count coming in to IF
#     2               3                    ***0***       `uvm_object_utils(ral_adapter)
#     2               4                    ***0***       `uvm_object_utils(ral_adapter)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     2                                    ***0***     Count coming in to IF
#     2               5                    ***0***       `uvm_object_utils(ral_adapter)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     2                                    ***0***     Count coming in to IF
#     2               6                    ***0***       `uvm_object_utils(ral_adapter)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     20                                   ***0***     Count coming in to IF
#     20              1                    ***0***         rw.kind = (item.pwrite == 1'b1)?UVM_WRITE:UVM_READ;
#     20              2                    ***0***         rw.kind = (item.pwrite == 1'b1)?UVM_WRITE:UVM_READ;
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     21                                   ***0***     Count coming in to IF
#     21              1                    ***0***         rw.data = (item.pwrite == 1'b1)?item.pwdata:item.prdata;
#     21              2                    ***0***         rw.data = (item.pwrite == 1'b1)?item.pwdata:item.prdata;
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_adapter.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_agent.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           10         0        10       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_agent.sv --
# 
#     1                                                class ral_agent extends uvm_agent;
#     2                                                
#     3               1                    ***0***       `uvm_component_utils(ral_agent)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  ral_driver drv;
#     6                                                  ral_sequencer seqr;
#     7                                                  ral_mon mon;
#     8                                                
#     9                                                  function new(string name = "ral_agent", uvm_component parent= null);
#     10              1                    ***0***         super.new(name, parent);
#     11                                                 endfunction 
#     12                                               
#     13                                                 virtual function void build_phase(uvm_phase phase);
#     14              1                    ***0***         super.build_phase(phase);
#     15              1                    ***0***         drv = ral_driver::type_id::create("drv", this);
#     16              1                    ***0***         seqr = ral_sequencer::type_id::create("seqr", this);
#     17              1                    ***0***         mon = ral_mon::type_id::create("mon", this);
#     18                                                 endfunction 
#     19                                               
#     20                                                 virtual function void connect_phase(uvm_phase phase);
#     21              1                    ***0***         super.connect_phase(phase);
#     22              1                    ***0***         drv.seq_item_port.connect(seqr.seq_item_export);
#     23                                                 endfunction 
#     24                                               
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_agent.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_driver.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           42         0        42       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_driver.sv --
# 
#     1                                                class ral_driver extends uvm_driver#(ral_seq_item);
#     2                                                
#     3               1                    ***0***       `uvm_component_utils(ral_driver)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  virtual ral_interface.mp_drv vif;
#     6                                                  ral_seq_item pkt;
#     7                                                
#     8                                                  function new(string name = "ral_driver", uvm_component parent = null);
#     9               1                    ***0***         super.new(name, parent);
#     10                                                 endfunction
#     11                                               
#     12                                                 function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14                                                   if(!uvm_config_db#(virtual ral_interface.mp_drv)::get(this, "", "vif", vif))
#     15              1                    ***0***           `uvm_fatal(get_type_name(), "Unable to get virtual interface");
#     16                                                 endfunction
#     17                                               
#     18                                                 task run_phase(uvm_phase phase);
#     19              1                    ***0***         super.run_phase(phase);
#     20              1                    ***0***         vif.cb_drv.psel    <= 1'b0;
#     21              1                    ***0***         vif.cb_drv.penable <= 1'b0;
#     22              1                    ***0***         vif.cb_drv.pwrite  <= 1'b0;
#     23              1                    ***0***         vif.cb_drv.paddr   <= 32'h0;
#     24              1                    ***0***         vif.cb_drv.pwdata  <= 32'h0;
#     25                                               
#     26              1                    ***0***         forever begin
#     27              1                    ***0***           seq_item_port.get_next_item(pkt); 
#     28              1                    ***0***           drive();
#     29              1                    ***0***           seq_item_port.item_done(); 
#     30              1                    ***0***           `uvm_info("DRV", $sformatf("Transaction completed: %s", pkt.sprint()), UVM_LOW);
#     31                                                   end
#     32                                                 endtask
#     33                                               
#     34                                                 task drive();
#     35                                               //    if(vif.presetn == 1'b1)
#     36                                                 //    begin
#     37                                                       if(pkt.pwrite == 1'b1)
#     38                                                         begin 
#     39              1                    ***0***                 @(vif.cb_drv);
#     40              1                    ***0***                 vif.presetn <= 1'b1;
#     41              1                    ***0***                 vif.cb_drv.pwrite  <= 1'b1;
#     42              1                    ***0***                 vif.cb_drv.psel    <= 1'b1;
#     43              1                    ***0***                 vif.cb_drv.paddr   <= pkt.paddr;
#     44              1                    ***0***                 vif.cb_drv.pwdata  <= pkt.pwdata;
#     45              1                    ***0***                 repeat(2)@(vif.cb_drv);
#     45              2                    ***0***     
#     46              1                    ***0***                 vif.cb_drv.penable <= 1'b1; 
#     47              1                    ***0***                 `uvm_info("DRV", $sformatf("Wdata : %0h, Addr : %0h",vif.cb_drv.pwdata, vif.cb_drv.paddr),UVM_NONE);
#     48              1                    ***0***                 @(vif.cb_drv);
#     49              1                    ***0***                 vif.cb_drv.psel    <= 1'b0;
#     50              1                    ***0***                 vif.cb_drv.penable <= 1'b0;
#     51                                                         end
#     52                                                       else
#     53                                                         begin
#     54              1                    ***0***                 @(vif.cb_drv);
#     55              1                    ***0***                 vif.cb_drv.pwrite  <= 1'b0;
#     56              1                    ***0***                 vif.cb_drv.paddr   <= pkt.paddr;
#     57              1                    ***0***                 vif.cb_drv.psel    <= 1'b1;
#     58              1                    ***0***                 repeat(2)@(vif.cb_drv);
#     58              2                    ***0***     
#     59              1                    ***0***                 vif.cb_drv.penable <= 1'b1; 
#     60              1                    ***0***                 `uvm_info("DRV", $sformatf("Rdata : %0h, Addr : %0h",vif.cb_drv.prdata, vif.cb_drv.paddr),UVM_NONE);
#     61              1                    ***0***                 @(vif.cb_drv);
#     62              1                    ***0***                 vif.cb_drv.psel    <= 1'b0;
#     63              1                    ***0***                 vif.cb_drv.penable <= 1'b0;
#     64              1                    ***0***                 pkt.prdata = vif.cb_drv.prdata; // Capture read data from DUT
#     65                                                         end
#     66                                                   //  end
#     67                                                 endtask
#     68                                               
#     69                                               endclass
#     70                                               
#     71                                               /*
#     72                                               class ral_driver extends uvm_driver#(ral_seq_item);
#     73                                               
#     74                                                 `uvm_component_utils(ral_driver)
#     75                                               
#     76                                                 virtual ral_interface.mp_drv vif;
#     77                                                 ral_seq_item pkt;
#     78                                               
#     79                                                 function new(string name = "ral_driver", uvm_component parent = null);
#     80                                                   super.new(name, parent);
#     81                                                 endfunction
#     82                                               
#     83                                                 function void build_phase(uvm_phase phase);
#     84                                                   super.build_phase(phase);
#     85                                                   if(!uvm_config_db#(virtual ral_interface.mp_drv)::get(this, "", "vif", vif))
#     86                                                     `uvm_fatal(get_type_name(), "Unable to get virtual interface");
#     87                                                 endfunction
#     88                                               
#     89                                                 task run_phase(uvm_phase phase);
#     90                                                   super.run_phase(phase);
#     91                                                   // Initialize bus signals to a safe state at the start of simulation
#     92                                                   // This should ideally be done in connect_phase or pre_reset/reset sequence if your DUT requires it
#     93                                                   // vif.presetn should be controlled by the testbench top, not the driver generally
#     94                                                    vif.cb_drv.psel    <= 1'b0;
#     95                                                    vif.cb_drv.penable <= 1'b0;
#     96                                                    vif.cb_drv.pwrite  <= 1'b0;
#     97                                                    vif.cb_drv.paddr   <= 32'h0;
#     98                                                    vif.cb_drv.pwdata  <= 32'h0;
#     99                                               
#     100                                                  forever begin
#     101                                                    seq_item_port.get_next_item(pkt);
#     102                                                    drive();
#     103                                                    seq_item_port.item_done();
#     104                                                    `uvm_info("DRV", $sformatf("Transaction completed: %s", pkt.sprint()), UVM_LOW);
#     105                                                  end
#     106                                                endtask
#     107                                              
#     108                                                task drive();
#     109                                                  if(pkt.pwrite == 1'b1) begin // Write Transaction
#     110                                                    // Cycle 1 (SETUP Phase)
#     111                                                    @(vif.cb_drv); // Wait for the positive clock edge
#     112                                                    vif.cb_drv.psel    <= 1'b1;
#     113                                                    vif.cb_drv.pwrite  <= 1'b1;
#     114                                                    vif.cb_drv.paddr   <= pkt.paddr;
#     115                                                    vif.cb_drv.pwdata  <= pkt.pwdata;
#     116                                                    vif.cb_drv.penable <= 1'b0; // Ensure penable is low in setup phase
#     117                                              
#     118                                                    // Cycle 2 (ACCESS Phase)
#     119                                                    @(vif.cb_drv); // Wait for the next positive clock edge
#     120                                                    vif.cb_drv.penable <= 1'b1; // Assert penable
#     121                                                    `uvm_info("DRV", $sformatf("APB Write: Addr=0x%0h, Data=0x%0h", vif.cb_drv.paddr, vif.cb_drv.pwdata), UVM_NONE);
#     122                                              
#     123                                                    // Cycle 3 (IDLE Phase / Transaction Completion)
#     124                                                    @(vif.cb_drv); // Wait for the next positive clock edge
#     125                                                    vif.cb_drv.psel    <= 1'b0;    // De-assert psel
#     126                                                    vif.cb_drv.penable <= 1'b0; // De-assert penable (can be done earlier for a single transaction)
#     127                                              
#     128                                                  end else begin // Read Transaction
#     129                                                    // Cycle 1 (SETUP Phase)
#     130                                                    @(vif.cb_drv); // Wait for the positive clock edge
#     131                                                    vif.cb_drv.psel    <= 1'b1;
#     132                                                    vif.cb_drv.pwrite  <= 1'b0;
#     133                                                    vif.cb_drv.paddr   <= pkt.paddr;
#     134                                                    vif.cb_drv.penable <= 1'b0; // Ensure penable is low in setup phase
#     135                                                    vif.cb_drv.pwdata  <= 32'hX; // Drive X for write data on reads (best practice)
#     136                                              
#     137                                                    // Cycle 2 (ACCESS Phase)
#     138                                                    @(vif.cb_drv); // Wait for the next positive clock edge
#     139                                                    vif.cb_drv.penable <= 1'b1; // Assert penable
#     140                                                    // prdata is valid from DUT AFTER this clock edge (i.e., in the subsequent @(vif.cb_drv))
#     141                                                    `uvm_info("DRV", $sformatf("APB Read Request: Addr=0x%0h", vif.cb_drv.paddr), UVM_NONE);
#     142                                              
#     143                                                    // Cycle 3 (READ DATA VALID Phase / IDLE Phase)
#     144                                                    @(vif.cb_drv); // Wait for the next positive clock edge. prdata is now stable.
#     145                                                    pkt.prdata = vif.cb_drv.prdata; // Capture read data from DUT
#     146                                              
#     147                                                    vif.cb_drv.psel    <= 1'b0;    // De-assert psel
#     148                                                    vif.cb_drv.penable <= 1'b0; // De-assert penable
#     149                                              
#     150                                                    `uvm_info("DRV", $sformatf("APB Read Response: Data=0x%0h", pkt.prdata, vif.cb_drv.paddr), UVM_NONE);
#     151                                                  end
#     152                                                endtask
#     153                                              
#     154                                              endclass
#     155                                              
#     156                                              */
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        12         0        12       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_driver.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     14                                   ***0***     Count coming in to IF
#     14              1                    ***0***         if(!uvm_config_db#(virtual ral_interface.mp_drv)::get(this, "", "vif", vif))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     15                                   ***0***     Count coming in to IF
#     15              1                    ***0***           `uvm_fatal(get_type_name(), "Unable to get virtual interface");
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     30                                   ***0***     Count coming in to IF
#     30              1                    ***0***           `uvm_info("DRV", $sformatf("Transaction completed: %s", pkt.sprint()), UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     37                                   ***0***     Count coming in to IF
#     37              1                    ***0***             if(pkt.pwrite == 1'b1)
#     52              1                    ***0***             else
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     47                                   ***0***     Count coming in to IF
#     47              1                    ***0***                 `uvm_info("DRV", $sformatf("Wdata : %0h, Addr : %0h",vif.cb_drv.pwdata, vif.cb_drv.paddr),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     60                                   ***0***     Count coming in to IF
#     60              1                    ***0***                 `uvm_info("DRV", $sformatf("Rdata : %0h, Addr : %0h",vif.cb_drv.prdata, vif.cb_drv.paddr),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_driver.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_env.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           14         0        14       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_env.sv --
# 
#     1                                                class ral_env extends uvm_env;
#     2                                                
#     3               1                    ***0***       `uvm_component_utils(ral_env)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "ral_env",uvm_component parent);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_agent agent;
#     10                                                 ral_scb sb;
#     11                                                 reg_block regmodel;
#     12                                                 ral_adapter adapter;
#     13                                               
#     14                                                 function void build_phase(uvm_phase phase);
#     15              1                    ***0***         super.build_phase(phase);
#     16              1                    ***0***         agent = ral_agent::type_id::create("agent",this);
#     17                                                   //cov = ral_cov::type_id::create("cov",this);
#     18              1                    ***0***         regmodel = reg_block::type_id::create("regmodel", this);
#     19              1                    ***0***         regmodel.build();
#     20              1                    ***0***         adapter = ral_adapter::type_id::create("adapter",this);
#     21              1                    ***0***         sb = ral_scb::type_id::create("sb",this);
#     22                                                 endfunction
#     23                                               
#     24                                                 function void connect_phase(uvm_phase phase);
#     25              1                    ***0***         super.connect_phase(phase);
#     26              1                    ***0***         agent.mon.mon2sb_cov.connect(sb.sb2mon);
#     27              1                    ***0***         regmodel.default_map.set_sequencer( .sequencer(agent.seqr), .adapter(adapter) );
#     28              1                    ***0***         regmodel.default_map.set_base_addr(0);
#     29                                                   //regmodel.default_map.set_auto_predict(1);
#     30                                                 endfunction
#     31                                               
#     32                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_env.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_interface.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                            2         0         2       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_interface.sv --
# 
#     1                                                interface ral_interface(input logic pclk, input bit presetn);
#     2                                                
#     3                                                  logic psel;
#     4                                                  logic penable;
#     5                                                  logic pwrite;
#     6                                                  logic [31:0] paddr;
#     7                                                  logic [31:0] pwdata;
#     8                                                  logic [31:0] prdata;
#     9                                                
#     10              1                    ***0***       clocking cb_drv @(posedge pclk);
#     11                                                   default input #0 output #0;
#     12                                                   input presetn;
#     13                                                   inout psel;
#     14                                                   inout penable;
#     15                                                   inout pwrite;
#     16                                                   inout paddr;
#     17                                                   inout pwdata;
#     18                                                   input prdata;
#     19                                                 endclocking
#     20                                               
#     21              1                    ***0***       clocking cb_mon @(posedge pclk);
#     22                                                   default input #0 output #0;
#     23                                                   input psel;
#     24                                                   input penable;
#     25                                                   input pwrite;
#     26                                                   input paddr;
#     27                                                   input pwdata;
#     28                                                   input prdata;
#     29                                                 endclocking
#     30                                               
#     31                                                 modport mp_drv(clocking cb_drv, input pclk, presetn, prdata);
#     32                                                 modport mp_mon(clocking cb_mon, input pclk, presetn);
#     33                                               
#     34                                               // ASSERTIONS
#     35                                               
#     36                                               endinterface
#     37                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                    202         0       202       0.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_interface.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
#           1                                presetn           0           0        0.00 
#           1                                   pclk           0           0        0.00 
#           3                                   psel           0           0        0.00 
#           4                                penable           0           0        0.00 
#           5                                 pwrite           0           0        0.00 
#           6                               paddr[9]           0           0        0.00 
#           6                               paddr[8]           0           0        0.00 
#           6                               paddr[7]           0           0        0.00 
#           6                               paddr[6]           0           0        0.00 
#           6                               paddr[5]           0           0        0.00 
#           6                               paddr[4]           0           0        0.00 
#           6                               paddr[3]           0           0        0.00 
#           6                              paddr[31]           0           0        0.00 
#           6                              paddr[30]           0           0        0.00 
#           6                               paddr[2]           0           0        0.00 
#           6                              paddr[29]           0           0        0.00 
#           6                              paddr[28]           0           0        0.00 
#           6                              paddr[27]           0           0        0.00 
#           6                              paddr[26]           0           0        0.00 
#           6                              paddr[25]           0           0        0.00 
#           6                              paddr[24]           0           0        0.00 
#           6                              paddr[23]           0           0        0.00 
#           6                              paddr[22]           0           0        0.00 
#           6                              paddr[21]           0           0        0.00 
#           6                              paddr[20]           0           0        0.00 
#           6                               paddr[1]           0           0        0.00 
#           6                              paddr[19]           0           0        0.00 
#           6                              paddr[18]           0           0        0.00 
#           6                              paddr[17]           0           0        0.00 
#           6                              paddr[16]           0           0        0.00 
#           6                              paddr[15]           0           0        0.00 
#           6                              paddr[14]           0           0        0.00 
#           6                              paddr[13]           0           0        0.00 
#           6                              paddr[12]           0           0        0.00 
#           6                              paddr[11]           0           0        0.00 
#           6                              paddr[10]           0           0        0.00 
#           6                               paddr[0]           0           0        0.00 
#           7                              pwdata[9]           0           0        0.00 
#           7                              pwdata[8]           0           0        0.00 
#           7                              pwdata[7]           0           0        0.00 
#           7                              pwdata[6]           0           0        0.00 
#           7                              pwdata[5]           0           0        0.00 
#           7                              pwdata[4]           0           0        0.00 
#           7                              pwdata[3]           0           0        0.00 
#           7                             pwdata[31]           0           0        0.00 
#           7                             pwdata[30]           0           0        0.00 
#           7                              pwdata[2]           0           0        0.00 
#           7                             pwdata[29]           0           0        0.00 
#           7                             pwdata[28]           0           0        0.00 
#           7                             pwdata[27]           0           0        0.00 
#           7                             pwdata[26]           0           0        0.00 
#           7                             pwdata[25]           0           0        0.00 
#           7                             pwdata[24]           0           0        0.00 
#           7                             pwdata[23]           0           0        0.00 
#           7                             pwdata[22]           0           0        0.00 
#           7                             pwdata[21]           0           0        0.00 
#           7                             pwdata[20]           0           0        0.00 
#           7                              pwdata[1]           0           0        0.00 
#           7                             pwdata[19]           0           0        0.00 
#           7                             pwdata[18]           0           0        0.00 
#           7                             pwdata[17]           0           0        0.00 
#           7                             pwdata[16]           0           0        0.00 
#           7                             pwdata[15]           0           0        0.00 
#           7                             pwdata[14]           0           0        0.00 
#           7                             pwdata[13]           0           0        0.00 
#           7                             pwdata[12]           0           0        0.00 
#           7                             pwdata[11]           0           0        0.00 
#           7                             pwdata[10]           0           0        0.00 
#           7                              pwdata[0]           0           0        0.00 
#           8                              prdata[9]           0           0        0.00 
#           8                              prdata[8]           0           0        0.00 
#           8                              prdata[7]           0           0        0.00 
#           8                              prdata[6]           0           0        0.00 
#           8                              prdata[5]           0           0        0.00 
#           8                              prdata[4]           0           0        0.00 
#           8                              prdata[3]           0           0        0.00 
#           8                             prdata[31]           0           0        0.00 
#           8                             prdata[30]           0           0        0.00 
#           8                              prdata[2]           0           0        0.00 
#           8                             prdata[29]           0           0        0.00 
#           8                             prdata[28]           0           0        0.00 
#           8                             prdata[27]           0           0        0.00 
#           8                             prdata[26]           0           0        0.00 
#           8                             prdata[25]           0           0        0.00 
#           8                             prdata[24]           0           0        0.00 
#           8                             prdata[23]           0           0        0.00 
#           8                             prdata[22]           0           0        0.00 
#           8                             prdata[21]           0           0        0.00 
#           8                             prdata[20]           0           0        0.00 
#           8                              prdata[1]           0           0        0.00 
#           8                             prdata[19]           0           0        0.00 
#           8                             prdata[18]           0           0        0.00 
#           8                             prdata[17]           0           0        0.00 
#           8                             prdata[16]           0           0        0.00 
#           8                             prdata[15]           0           0        0.00 
#           8                             prdata[14]           0           0        0.00 
#           8                             prdata[13]           0           0        0.00 
#           8                             prdata[12]           0           0        0.00 
#           8                             prdata[11]           0           0        0.00 
#           8                             prdata[10]           0           0        0.00 
#           8                              prdata[0]           0           0        0.00 
# 
# Total Node Count     =        101 
# Toggled Node Count   =          0 
# Untoggled Node Count =        101 
# 
# Toggle Coverage      =        0.0% (0 of 202 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_monitor.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           18         0        18       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_monitor.sv --
# 
#     1                                                class ral_mon extends uvm_monitor;
#     2               1                    ***0***       `uvm_component_utils(ral_mon)
#     2               2                    ***0***     
#     2               3                    ***0***     
#     3                                                
#     4                                                  virtual ral_interface.mp_mon vif;
#     5                                                  uvm_analysis_port #(ral_seq_item) mon2sb_cov;
#     6                                                  ral_seq_item pkt;
#     7                                                
#     8                                                  function new(string name = "ral_mon", uvm_component parent);
#     9               1                    ***0***         super.new(name, parent);
#     10                                                 endfunction
#     11                                               
#     12                                                 function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         mon2sb_cov = new("mon2sb_cov", this);
#     15                                                   if(!uvm_config_db#(virtual ral_interface.mp_mon)::get(this, "", "vif", vif))
#     16              1                    ***0***           `uvm_error("monitor", "Unable to get virtual interface");
#     17                                                 endfunction
#     18                                               
#     19                                                 virtual task run_phase(uvm_phase phase);
#     20              1                    ***0***         pkt = ral_seq_item::type_id::create("pkt");
#     21              1                    ***0***         forever begin
#     22                                                     //  repeat(3) @(vif.cb_mon);
#     23              1                    ***0***           @(vif.cb_mon);
#     24              1                    ***0***           $display("-------------monitor begin----------");
#     25              1                    ***0***           pkt.paddr    =   vif.cb_mon.paddr;
#     26              1                    ***0***           pkt.pwrite   =   vif.cb_mon.pwrite;
#     27              1                    ***0***           pkt.psel     =   vif.cb_mon.psel;
#     28              1                    ***0***           pkt.penable  =   vif.cb_mon.penable;
#     29              1                    ***0***           pkt.pwdata   =   vif.cb_mon.pwdata;
#     30              1                    ***0***           pkt.prdata   =   vif.cb_mon.prdata;
#     31                                               
#     32              1                    ***0***           mon2sb_cov.write(pkt);
#     33                                               
#     34                                                   end
#     35                                                 endtask
#     36                                               
#     37                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         4         0         4       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_monitor.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     15                                   ***0***     Count coming in to IF
#     15              1                    ***0***         if(!uvm_config_db#(virtual ral_interface.mp_mon)::get(this, "", "vif", vif))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     16                                   ***0***     Count coming in to IF
#     16              1                    ***0***           `uvm_error("monitor", "Unable to get virtual interface");
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_monitor.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_regblock.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                          125         0       125       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_regblock.sv --
# 
#     1                                                /*class ctrl extends uvm_reg;
#     2                                                  `uvm_object_utils(ctrl)
#     3                                                  rand uvm_reg_field ctrl_field;
#     4                                                
#     5                                                  function new(string name = "ctrl");
#     6                                                    super.new(name, 4, UVM_NO_COVERAGE);
#     7                                                  endfunction
#     8                                                
#     9                                                  function void build;
#     10                                                   ctrl_field = uvm_reg_field::type_id::create("ctrl_field");
#     11                                                   ctrl_field.configure(this, 4, 0, "RW", 0, 0, 1, 1, 1);
#     12                                                 endfunction
#     13                                               endclass
#     14                                               
#     15                                               class reg1 extends uvm_reg;
#     16                                                 `uvm_object_utils(reg1)
#     17                                                 rand uvm_reg_field reg1_field;
#     18                                               
#     19                                                 function new(string name = "reg1");
#     20                                                   super.new(name, 32, UVM_NO_COVERAGE);
#     21                                                 endfunction
#     22                                               
#     23                                                 function void build;
#     24                                                   reg1_field = uvm_reg_field::type_id::create("reg1_field");
#     25                                                   reg1_field.configure(this, 32, 0, "RW", 0, 32'hA5A5_0000, 1, 1, 1);
#     26                                                 endfunction
#     27                                               endclass
#     28                                               
#     29                                               class reg2 extends uvm_reg;
#     30                                                 `uvm_object_utils(reg2)
#     31                                                 rand uvm_reg_field reg2_field;
#     32                                               
#     33                                                 function new(string name = "reg2");
#     34                                                   super.new(name, 32, UVM_NO_COVERAGE);
#     35                                                 endfunction
#     36                                               
#     37                                                 function void build;
#     38                                                   reg2_field = uvm_reg_field::type_id::create("reg2_field");
#     39                                                   reg2_field.configure(this, 32, 0, "RW", 0, 32'h1234_9876, 1, 1, 1);
#     40                                                 endfunction
#     41                                               endclass
#     42                                               
#     43                                               class reg3 extends uvm_reg;
#     44                                                 `uvm_object_utils(reg3)
#     45                                                 rand uvm_reg_field reg3_field;
#     46                                               
#     47                                                 function new(string name = "reg3");
#     48                                                   super.new(name, 32, UVM_NO_COVERAGE);
#     49                                                 endfunction
#     50                                               
#     51                                                 function void build;
#     52                                                   reg3_field = uvm_reg_field::type_id::create("reg3_field");
#     53                                                   reg3_field.configure(this, 32, 0, "RW", 0, 32'h5A5A_5555, 1, 1, 1);
#     54                                                 endfunction
#     55                                               endclass
#     56                                               
#     57                                               class reg4 extends uvm_reg;
#     58                                                 `uvm_object_utils(reg4)
#     59                                                 rand uvm_reg_field reg4_field;
#     60                                               
#     61                                                 function new(string name = "reg4");
#     62                                                   super.new(name, 32, UVM_NO_COVERAGE);
#     63                                                 endfunction
#     64                                               
#     65                                                 function void build;
#     66                                                   reg4_field = uvm_reg_field::type_id::create("reg4_field");
#     67                                                   reg4_field.configure(this, 32, 0, "RW", 0, 32'h0000_FFFF, 1, 1, 1);
#     68                                                 endfunction
#     69                                               endclass
#     70                                               
#     71                                               
#     72                                               //// REG BLOCK ////
#     73                                               
#     74                                               class reg_block extends uvm_reg_block;
#     75                                                 `uvm_object_utils(reg_block)
#     76                                               
#     77                                                 rand ctrl c1;
#     78                                                 rand reg1 r1;
#     79                                                 rand reg2 r2;
#     80                                                 rand reg3 r3;
#     81                                                 rand reg4 r4;
#     82                                               
#     83                                                 function new(string name = "reg_block");
#     84                                                   super.new(name, UVM_NO_COVERAGE);
#     85                                                 endfunction
#     86                                               
#     87                                                 function void build;
#     88                                                   c1 = ctrl::type_id::create("c1");
#     89                                                   c1.build();
#     90                                                   c1.configure(this);
#     91                                                   c1.add_hdl_path_slice("cntrl", 0, 4);
#     92                                               
#     93                                                   r1 = reg1::type_id::create("r1");
#     94                                                   r1.build();
#     95                                                   r1.configure(this);
#     96                                                   r1.add_hdl_path_slice("reg1", 0, 32);
#     97                                               
#     98                                                   r2 = reg2::type_id::create("r2");
#     99                                                   r2.build();
#     100                                                  r2.configure(this);
#     101                                                  r2.add_hdl_path_slice("reg2", 0, 32);
#     102                                              
#     103                                                  r3 = reg3::type_id::create("r3");
#     104                                                  r3.build();
#     105                                                  r3.configure(this);
#     106                                                  r3.add_hdl_path_slice("reg3", 0, 32);
#     107                                              
#     108                                                  r4 = reg4::type_id::create("r4");
#     109                                                  r4.build();
#     110                                                  r4.configure(this);
#     111                                                  r4.add_hdl_path_slice("reg4", 0, 32);
#     112                                                  
#     113                                                  default_map = create_map("default_map", 0, 4, UVM_LITTLE_ENDIAN);
#     114                                                  default_map.add_reg(c1, 'h0, "RW");
#     115                                                  default_map.add_reg(r1, 'h4, "RW");
#     116                                                  default_map.add_reg(r2, 'h8, "RW");
#     117                                                  default_map.add_reg(r3, 'hc, "RW");
#     118                                                  default_map.add_reg(r4, 'h10, "RW");
#     119                                                  add_hdl_path("tb.DUT","RTL");	
#     120                                                  default_map.set_auto_predict(1);
#     121                                                  lock_model();
#     122                                                endfunction
#     123                                              endclass*/
#     124                                              
#     125                                              //================= ctrl Register =================//
#     126                                              class ctrl extends uvm_reg;
#     127             1                    ***0***       `uvm_object_utils(ctrl)
#     127             2                    ***0***     
#     127             3                    ***0***     
#     127             4                    ***0***     
#     127             5                    ***0***     
#     127             6                    ***0***     
#     127             7                    ***0***     
#     127             8                    ***0***     
#     127             9                    ***0***     
#     127            10                    ***0***     
#     128                                                rand uvm_reg_field ctrl_field;
#     129                                              
#     130                                                covergroup ctrl_cov;
#     131                                                  option.per_instance = 1;
#     132                                                  coverpoint ctrl_field.value[3:0] {
#     133                                                    bins b1  = {[0:15]};
#     134                                                  }
#     135                                                endgroup
#     136                                              
#     137                                                function new(string name = "ctrl");
#     138             1                    ***0***         super.new(name, 4, UVM_CVR_FIELD_VALS);
#     139                                                  if (has_coverage(UVM_CVR_FIELD_VALS))
#     140             1                    ***0***           ctrl_cov = new();
#     141                                                endfunction
#     142                                              
#     143                                                function void build;
#     144             1                    ***0***         ctrl_field = uvm_reg_field::type_id::create("ctrl_field");
#     145             1                    ***0***         ctrl_field.configure(this, 4, 0, "RW", 0, 0, 1, 1, 1);
#     146                                                endfunction
#     147                                              
#     148                                                virtual function void sample(uvm_reg_data_t data,
#     149                                                                             uvm_reg_data_t byte_en,
#     150                                                                             bit is_read,
#     151                                                                             uvm_reg_map map);
#     152             1                    ***0***         ctrl_cov.sample();
#     153                                                endfunction
#     154                                              
#     155                                                virtual function void sample_values();
#     156             1                    ***0***         super.sample_values();
#     157             1                    ***0***         ctrl_cov.sample();
#     158                                                endfunction
#     159                                              endclass
#     160                                              
#     161                                              //================= reg1 =================//
#     162                                              class reg1 extends uvm_reg;
#     163             1                    ***0***       `uvm_object_utils(reg1)
#     163             2                    ***0***     
#     163             3                    ***0***     
#     163             4                    ***0***     
#     163             5                    ***0***     
#     163             6                    ***0***     
#     163             7                    ***0***     
#     163             8                    ***0***     
#     163             9                    ***0***     
#     163            10                    ***0***     
#     164                                                rand uvm_reg_field reg1_field;
#     165                                              
#     166                                                covergroup reg1_cov;
#     167                                                  option.per_instance = 1;
#     168                                                  coverpoint reg1_field.value {
#     169                                                    bins b2  = {[0:32'hFFFF_FFFF]};
#     170                                                  }
#     171                                                endgroup
#     172                                              
#     173                                                function new(string name = "reg1");
#     174             1                    ***0***         super.new(name, 32, UVM_CVR_FIELD_VALS);
#     175                                                  if (has_coverage(UVM_CVR_FIELD_VALS))
#     176             1                    ***0***           reg1_cov = new();
#     177                                                endfunction
#     178                                              
#     179                                                function void build;
#     180             1                    ***0***         reg1_field = uvm_reg_field::type_id::create("reg1_field");
#     181             1                    ***0***         reg1_field.configure(this, 32, 0, "RW", 0, 32'hA5A5_0000, 1, 1, 1);
#     182                                                endfunction
#     183                                              
#     184                                                virtual function void sample(uvm_reg_data_t data,
#     185                                                                             uvm_reg_data_t byte_en,
#     186                                                                             bit is_read,
#     187                                                                             uvm_reg_map map);
#     188             1                    ***0***         reg1_cov.sample();
#     189                                                endfunction
#     190                                              
#     191                                                virtual function void sample_values();
#     192             1                    ***0***         super.sample_values();
#     193             1                    ***0***         reg1_cov.sample();
#     194                                                endfunction
#     195                                              endclass
#     196                                              
#     197                                              //================= reg2 =================//
#     198                                              class reg2 extends uvm_reg;
#     199             1                    ***0***       `uvm_object_utils(reg2)
#     199             2                    ***0***     
#     199             3                    ***0***     
#     199             4                    ***0***     
#     199             5                    ***0***     
#     199             6                    ***0***     
#     199             7                    ***0***     
#     199             8                    ***0***     
#     199             9                    ***0***     
#     199            10                    ***0***     
#     200                                                rand uvm_reg_field reg2_field;
#     201                                              
#     202                                                covergroup reg2_cov;
#     203                                                  option.per_instance = 1;
#     204                                                  coverpoint reg2_field.value {
#     205                                                    bins b3  = {[0:32'hFFFF_FFFF]};
#     206                                                  }
#     207                                                endgroup
#     208                                              
#     209                                                function new(string name = "reg2");
#     210             1                    ***0***         super.new(name, 32, UVM_CVR_FIELD_VALS);
#     211                                                  if (has_coverage(UVM_CVR_FIELD_VALS))
#     212             1                    ***0***           reg2_cov = new();
#     213                                                endfunction
#     214                                              
#     215                                                function void build;
#     216             1                    ***0***         reg2_field = uvm_reg_field::type_id::create("reg2_field");
#     217             1                    ***0***         reg2_field.configure(this, 32, 0, "RW", 0, 32'h1234_9876, 1, 1, 1);
#     218                                                endfunction
#     219                                              
#     220                                                virtual function void sample(uvm_reg_data_t data,
#     221                                                                             uvm_reg_data_t byte_en,
#     222                                                                             bit is_read,
#     223                                                                             uvm_reg_map map);
#     224             1                    ***0***         reg2_cov.sample();
#     225                                                endfunction
#     226                                              
#     227                                                virtual function void sample_values();
#     228             1                    ***0***         super.sample_values();
#     229             1                    ***0***         reg2_cov.sample();
#     230                                                endfunction
#     231                                              endclass
#     232                                              
#     233                                              //================= reg3 =================//
#     234                                              class reg3 extends uvm_reg;
#     235             1                    ***0***       `uvm_object_utils(reg3)
#     235             2                    ***0***     
#     235             3                    ***0***     
#     235             4                    ***0***     
#     235             5                    ***0***     
#     235             6                    ***0***     
#     235             7                    ***0***     
#     235             8                    ***0***     
#     235             9                    ***0***     
#     235            10                    ***0***     
#     236                                                rand uvm_reg_field reg3_field;
#     237                                              
#     238                                                covergroup reg3_cov;
#     239                                                  option.per_instance = 1;
#     240                                                  coverpoint reg3_field.value {
#     241                                                    bins b4  = {[0:32'hFFFF_FFFF]};
#     242                                                  }
#     243                                                endgroup
#     244                                              
#     245                                                function new(string name = "reg3");
#     246             1                    ***0***         super.new(name, 32, UVM_CVR_FIELD_VALS);
#     247                                                  if (has_coverage(UVM_CVR_FIELD_VALS))
#     248             1                    ***0***           reg3_cov = new();
#     249                                                endfunction
#     250                                              
#     251                                                function void build;
#     252             1                    ***0***         reg3_field = uvm_reg_field::type_id::create("reg3_field");
#     253             1                    ***0***         reg3_field.configure(this, 32, 0, "RW", 0, 32'h5A5A_5555, 1, 1, 1);
#     254                                                endfunction
#     255                                              
#     256                                                virtual function void sample(uvm_reg_data_t data,
#     257                                                                             uvm_reg_data_t byte_en,
#     258                                                                             bit is_read,
#     259                                                                             uvm_reg_map map);
#     260             1                    ***0***         reg3_cov.sample();
#     261                                                endfunction
#     262                                              
#     263                                                virtual function void sample_values();
#     264             1                    ***0***         super.sample_values();
#     265             1                    ***0***         reg3_cov.sample();
#     266                                                endfunction
#     267                                              endclass
#     268                                              
#     269                                              //================= reg4 =================//
#     270                                              class reg4 extends uvm_reg;
#     271             1                    ***0***       `uvm_object_utils(reg4)
#     271             2                    ***0***     
#     271             3                    ***0***     
#     271             4                    ***0***     
#     271             5                    ***0***     
#     271             6                    ***0***     
#     271             7                    ***0***     
#     271             8                    ***0***     
#     271             9                    ***0***     
#     271            10                    ***0***     
#     272                                                rand uvm_reg_field reg4_field;
#     273                                              
#     274                                                covergroup reg4_cov;
#     275                                                  option.per_instance = 1;
#     276                                                  coverpoint reg4_field.value {
#     277                                                    bins b5  = {[0:32'hFFFF_FFFF]};
#     278                                                  }
#     279                                                endgroup
#     280                                              
#     281                                                function new(string name = "reg4");
#     282             1                    ***0***         super.new(name, 32, UVM_CVR_FIELD_VALS);
#     283                                                  if (has_coverage(UVM_CVR_FIELD_VALS))
#     284             1                    ***0***           reg4_cov = new();
#     285                                                endfunction
#     286                                              
#     287                                                function void build;
#     288             1                    ***0***         reg4_field = uvm_reg_field::type_id::create("reg4_field");
#     289             1                    ***0***         reg4_field.configure(this, 32, 0, "RW", 0, 32'h0000_FFFF, 1, 1, 1);
#     290                                                endfunction
#     291                                              
#     292                                                virtual function void sample(uvm_reg_data_t data,
#     293                                                                             uvm_reg_data_t byte_en,
#     294                                                                             bit is_read,
#     295                                                                             uvm_reg_map map);
#     296             1                    ***0***         reg4_cov.sample();
#     297                                                endfunction
#     298                                              
#     299                                                virtual function void sample_values();
#     300             1                    ***0***         super.sample_values();
#     301             1                    ***0***         reg4_cov.sample();
#     302                                                endfunction
#     303                                              endclass
#     304                                              
#     305                                              ////REGBLOCK///
#     306                                              
#     307                                              class reg_block extends uvm_reg_block;
#     308             1                    ***0***       `uvm_object_utils(reg_block)
#     308             2                    ***0***     
#     308             3                    ***0***     
#     308             4                    ***0***     
#     308             5                    ***0***     
#     308             6                    ***0***     
#     308             7                    ***0***     
#     308             8                    ***0***     
#     308             9                    ***0***     
#     308            10                    ***0***     
#     309                                              
#     310                                                rand ctrl c1;
#     311                                                rand reg1 r1;
#     312                                                rand reg2 r2;
#     313                                                rand reg3 r3;
#     314                                                rand reg4 r4;
#     315                                              
#     316                                                function new(string name = "reg_block");
#     317             1                    ***0***         super.new(name, build_coverage(UVM_NO_COVERAGE));
#     318                                                endfunction
#     319                                              
#     320                                                function void build;
#     321                                                  // Enable coverage for all fields
#     322             1                    ***0***         uvm_reg::include_coverage("*", UVM_CVR_ALL);
#     323                                              
#     324             1                    ***0***         c1 = ctrl::type_id::create("c1");
#     325             1                    ***0***         c1.build();
#     326             1                    ***0***         c1.configure(this);
#     327             1                    ***0***         void'(c1.set_coverage(UVM_CVR_FIELD_VALS));
#     328                                                 // c1.add_hdl_path_slice("cntrl", 0, 4);
#     329                                              
#     330             1                    ***0***         r1 = reg1::type_id::create("r1");
#     331             1                    ***0***         r1.build();
#     332             1                    ***0***         r1.configure(this);
#     333             1                    ***0***         void'(r1.set_coverage(UVM_CVR_FIELD_VALS));
#     334                                                 // r1.add_hdl_path_slice("reg1", 0, 32);
#     335                                              
#     336             1                    ***0***         r2 = reg2::type_id::create("r2");
#     337             1                    ***0***         r2.build();
#     338             1                    ***0***         r2.configure(this);
#     339             1                    ***0***         void'(r2.set_coverage(UVM_CVR_FIELD_VALS));
#     340                                                //  r2.add_hdl_path_slice("reg2", 0, 32);
#     341                                              
#     342             1                    ***0***         r3 = reg3::type_id::create("r3");
#     343             1                    ***0***         r3.build();
#     344             1                    ***0***         r3.configure(this);
#     345             1                    ***0***         void'(r3.set_coverage(UVM_CVR_FIELD_VALS));
#     346                                               //   r3.add_hdl_path_slice("reg3", 0, 32);
#     347                                              
#     348             1                    ***0***         r4 = reg4::type_id::create("r4");
#     349             1                    ***0***         r4.build();
#     350             1                    ***0***         r4.configure(this);
#     351             1                    ***0***         void'(r4.set_coverage(UVM_CVR_FIELD_VALS));
#     352                                                //  r4.add_hdl_path_slice("reg4", 0, 32);
#     353                                              
#     354             1                    ***0***         default_map = create_map("default_map", 0, 4, UVM_LITTLE_ENDIAN);
#     355             1                    ***0***         default_map.add_reg(c1, 'h0, "RW");
#     356             1                    ***0***         default_map.add_reg(r1, 'h4, "RW");
#     357             1                    ***0***         default_map.add_reg(r2, 'h8, "RW");
#     358             1                    ***0***         default_map.add_reg(r3, 'hc, "RW");
#     359             1                    ***0***         default_map.add_reg(r4, 'h10, "RW");
#     360             1                    ***0***         default_map.set_auto_predict(1);
#     361                                                //
#     362                                                //
#     363                                                //  add_hdl_path("tb.DUT", "RTL");
#     364             1                    ***0***         lock_model();
#     365                                                endfunction
#     366                                              endclass
#     367                                              
#     368                                              module tb;
#     369                                                reg_block t1;
#     370                                                initial begin
#     371                                                  t1 = new("reg_block");
#     372                                                  t1.build();
#     373                                                end
#     374                                              endmodule
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        70         0        70       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_regblock.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             1                    ***0***       `uvm_object_utils(ctrl)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             2                    ***0***       `uvm_object_utils(ctrl)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             3                    ***0***       `uvm_object_utils(ctrl)
#     127             4                    ***0***       `uvm_object_utils(ctrl)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             5                    ***0***       `uvm_object_utils(ctrl)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             6                    ***0***       `uvm_object_utils(ctrl)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     139                                  ***0***     Count coming in to IF
#     139             1                    ***0***         if (has_coverage(UVM_CVR_FIELD_VALS))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     163                                  ***0***     Count coming in to IF
#     163             1                    ***0***       `uvm_object_utils(reg1)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     163                                  ***0***     Count coming in to IF
#     163             2                    ***0***       `uvm_object_utils(reg1)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     163                                  ***0***     Count coming in to IF
#     163             3                    ***0***       `uvm_object_utils(reg1)
#     163             4                    ***0***       `uvm_object_utils(reg1)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     163                                  ***0***     Count coming in to IF
#     163             5                    ***0***       `uvm_object_utils(reg1)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     163                                  ***0***     Count coming in to IF
#     163             6                    ***0***       `uvm_object_utils(reg1)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     175                                  ***0***     Count coming in to IF
#     175             1                    ***0***         if (has_coverage(UVM_CVR_FIELD_VALS))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     199                                  ***0***     Count coming in to IF
#     199             1                    ***0***       `uvm_object_utils(reg2)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     199                                  ***0***     Count coming in to IF
#     199             2                    ***0***       `uvm_object_utils(reg2)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     199                                  ***0***     Count coming in to IF
#     199             3                    ***0***       `uvm_object_utils(reg2)
#     199             4                    ***0***       `uvm_object_utils(reg2)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     199                                  ***0***     Count coming in to IF
#     199             5                    ***0***       `uvm_object_utils(reg2)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     199                                  ***0***     Count coming in to IF
#     199             6                    ***0***       `uvm_object_utils(reg2)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     211                                  ***0***     Count coming in to IF
#     211             1                    ***0***         if (has_coverage(UVM_CVR_FIELD_VALS))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     235                                  ***0***     Count coming in to IF
#     235             1                    ***0***       `uvm_object_utils(reg3)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     235                                  ***0***     Count coming in to IF
#     235             2                    ***0***       `uvm_object_utils(reg3)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     235                                  ***0***     Count coming in to IF
#     235             3                    ***0***       `uvm_object_utils(reg3)
#     235             4                    ***0***       `uvm_object_utils(reg3)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     235                                  ***0***     Count coming in to IF
#     235             5                    ***0***       `uvm_object_utils(reg3)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     235                                  ***0***     Count coming in to IF
#     235             6                    ***0***       `uvm_object_utils(reg3)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     247                                  ***0***     Count coming in to IF
#     247             1                    ***0***         if (has_coverage(UVM_CVR_FIELD_VALS))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     271                                  ***0***     Count coming in to IF
#     271             1                    ***0***       `uvm_object_utils(reg4)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     271                                  ***0***     Count coming in to IF
#     271             2                    ***0***       `uvm_object_utils(reg4)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     271                                  ***0***     Count coming in to IF
#     271             3                    ***0***       `uvm_object_utils(reg4)
#     271             4                    ***0***       `uvm_object_utils(reg4)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     271                                  ***0***     Count coming in to IF
#     271             5                    ***0***       `uvm_object_utils(reg4)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     271                                  ***0***     Count coming in to IF
#     271             6                    ***0***       `uvm_object_utils(reg4)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     283                                  ***0***     Count coming in to IF
#     283             1                    ***0***         if (has_coverage(UVM_CVR_FIELD_VALS))
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     308                                  ***0***     Count coming in to IF
#     308             1                    ***0***       `uvm_object_utils(reg_block)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     308                                  ***0***     Count coming in to IF
#     308             2                    ***0***       `uvm_object_utils(reg_block)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     308                                  ***0***     Count coming in to IF
#     308             3                    ***0***       `uvm_object_utils(reg_block)
#     308             4                    ***0***       `uvm_object_utils(reg_block)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     308                                  ***0***     Count coming in to IF
#     308             5                    ***0***       `uvm_object_utils(reg_block)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     308                                  ***0***     Count coming in to IF
#     308             6                    ***0***       `uvm_object_utils(reg_block)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_regblock.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_scb.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           14         0        14       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_scb.sv --
# 
#     1                                                class ral_scb extends uvm_scoreboard;
#     2               1                    ***0***       `uvm_component_utils(ral_scb)
#     2               2                    ***0***     
#     2               3                    ***0***     
#     3                                                
#     4                                                  uvm_analysis_imp#(ral_seq_item,ral_scb) sb2mon;
#     5                                                  bit [31:0] expected_mem [16];
#     6                                                  bit [7:0] temp;
#     7                                                  ral_seq_item tr_q[$];
#     8                                                
#     9                                                  function new(string name = "ral_scb", uvm_component parent = null);
#     10              1                    ***0***         super.new(name, parent);
#     11                                                 endfunction
#     12                                               
#     13                                                 virtual function void  build_phase(uvm_phase phase);
#     14              1                    ***0***         super.build_phase(phase);
#     15              1                    ***0***         sb2mon=new("sb2mon",this);
#     16                                                 endfunction
#     17                                                 
#     18                                                 virtual function void write(ral_seq_item pkt);
#     19              1                    ***0***     	tr_q.push_back(pkt);
#     20                                                 endfunction
#     21                                                 
#     22                                                 virtual task run_phase(uvm_phase phase);
#     23                                                   ral_seq_item pkt;
#     24              1                    ***0***         forever begin
#     25              1                    ***0***           wait(tr_q.size()>0);
#     26              1                    ***0***           pkt = tr_q.pop_front();
#     27                                                     if (pkt.pwrite) begin
#     28              1                    ***0***             expected_mem[pkt.paddr] = pkt.pwdata;
#     29              1                    ***0***             `uvm_info("SCOREBOARD", $sformatf("WRITE: Addr = %0h, Data = %0h", pkt.paddr, pkt.pwdata), UVM_MEDIUM);
#     30                                                     end else begin
#     31                                                       if (expected_mem[pkt.paddr] !== pkt.prdata) begin
#     32              1                    ***0***               `uvm_error("SCOREBOARD", $sformatf("Mismatch at Addr = %0h, Expected = %0h, Received = %0h", pkt.paddr, expected_mem[pkt.paddr], pkt.prdata));
#     33                                                       end else begin
#     34              1                    ***0***               `uvm_info("SCOREBOARD", $sformatf("READ MATCH: Addr = %0h, Data = %0h", pkt.paddr, pkt.prdata), UVM_MEDIUM);
#     35                                                       end
#     36                                                     end
#     37                                                   end
#     38                                                 endtask
#     39                                               
#     40                                               endclass
#     41                                               
#     42                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        10         0        10       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_scb.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     27                                   ***0***     Count coming in to IF
#     27              1                    ***0***           if (pkt.pwrite) begin
#     30              1                    ***0***           end else begin
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     29                                   ***0***     Count coming in to IF
#     29              1                    ***0***             `uvm_info("SCOREBOARD", $sformatf("WRITE: Addr = %0h, Data = %0h", pkt.paddr, pkt.pwdata), UVM_MEDIUM);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***             if (expected_mem[pkt.paddr] !== pkt.prdata) begin
#     33              1                    ***0***             end else begin
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     32                                   ***0***     Count coming in to IF
#     32              1                    ***0***               `uvm_error("SCOREBOARD", $sformatf("Mismatch at Addr = %0h, Expected = %0h, Received = %0h", pkt.paddr, expected_mem[pkt.paddr], pkt.prdata));
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     34                                   ***0***     Count coming in to IF
#     34              1                    ***0***               `uvm_info("SCOREBOARD", $sformatf("READ MATCH: Addr = %0h, Data = %0h", pkt.paddr, pkt.prdata), UVM_MEDIUM);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_scb.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_seq_item.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           11         0        11       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_seq_item.sv --
# 
#     1                                                class ral_seq_item extends uvm_sequence_item;
#     2                                                  rand bit [31:0] paddr;
#     3                                                  rand bit pwrite;
#     4                                                  rand bit psel;
#     5                                                  rand bit penable;
#     6                                                  rand bit [31:0] pwdata;
#     7                                                  bit [31:0] prdata;
#     8                                                 
#     9               1                    ***0***       `uvm_object_utils(ral_seq_item)
#     9               2                    ***0***     
#     9               3                    ***0***     
#     9               4                    ***0***     
#     9               5                    ***0***     
#     9               6                    ***0***     
#     9               7                    ***0***     
#     9               8                    ***0***     
#     9               9                    ***0***     
#     9              10                    ***0***     
#     10                                                 
#     11                                                 function new(string name = "ral_seq_item");
#     12              1                    ***0***         super.new(name);
#     13                                                 endfunction
#     14                                               
#     15                                               //  constraint addr_range {paddr inside {0, 4, 8, 12, 16};}
#     16                                               //  constraint psel_value {soft psel==1;}
#     17                                                
#     18                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        10         0        10       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/ral_seq_item.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     9                                    ***0***     Count coming in to IF
#     9               1                    ***0***       `uvm_object_utils(ral_seq_item)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     9                                    ***0***     Count coming in to IF
#     9               2                    ***0***       `uvm_object_utils(ral_seq_item)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     9                                    ***0***     Count coming in to IF
#     9               3                    ***0***       `uvm_object_utils(ral_seq_item)
#     9               4                    ***0***       `uvm_object_utils(ral_seq_item)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     9                                    ***0***     Count coming in to IF
#     9               5                    ***0***       `uvm_object_utils(ral_seq_item)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     9                                    ***0***     Count coming in to IF
#     9               6                    ***0***       `uvm_object_utils(ral_seq_item)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_seq_item.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_sequencer.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                            4         0         4       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_sequencer.sv --
# 
#     1                                                class ral_sequencer extends uvm_sequencer #(ral_seq_item);
#     2               1                    ***0***       `uvm_component_utils(ral_sequencer)
#     2               2                    ***0***     
#     2               3                    ***0***     
#     3                                                  function new (string name="ral_sequencer", uvm_component parent);
#     4               1                    ***0***         super.new(name, parent); 
#     5                                                  endfunction
#     6                                                endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_sequencer.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/ral_top.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                            5         0         5       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/ral_top.sv --
# 
#     1                                                `include "uvm_macros.svh"
#     2                                                 import uvm_pkg::*;
#     3                                                `include "ral_pkg.sv"
#     4                                                
#     5                                                `include "../rtl/design.v"
#     6                                                module tb;
#     7                                                  bit pclk;
#     8                                                  bit presetn;
#     9                                                  logic psel;
#     10                                                 logic penable;
#     11                                                 logic pwrite;
#     12                                                 logic [31:0] paddr;
#     13                                                 logic [31:0] pwdata;
#     14                                                 logic [31:0] prdata;
#     15                                                 //apb_slave DUT(.clk(clk),.presetn(presetn),.pwrite(pwrite),.paddr(paddr),.pwdata(pwdata),.prdata(prdata));
#     16                                                 
#     17                                                 top DUT(.pclk(vif.pclk), .presetn(vif.presetn), .psel(vif.psel), .penable(vif.penable), .pwrite(vif.pwrite), .paddr(vif.paddr), .pwdata(vif.pwdata), .prdata(vif.prdata));
#     18                                                 //apb_slave DUT(.clk(PCLK),.presetn(PRESETn),.psel(PSEL),.penable(PENABLE),.pwrite(PWRITE),.paddr(PADDR),.pwdata(PWDATA),.prdata(PRDATA));
#     19                                                 ral_interface vif(.pclk(pclk),.presetn(presetn));
#     20                                               
#     21              1                    ***0***       always #10 pclk = ~pclk;
#     21              2                    ***0***     
#     22                                                 
#     23                                                 initial begin
#     24                                                 // presetn=0;
#     25                                                 // #10 presetn=1;
#     26                                               //    presetn=0;
#     27                                               //   #10 presetn = 1;
#     28                                                 end
#     29                                                 initial begin
#     30              1                    ***0***       uvm_config_db#(virtual ral_interface.mp_drv)::set(null, "*", "vif", vif.mp_drv);
#     31              1                    ***0***       uvm_config_db#(virtual ral_interface.mp_mon)::set(null, "*", "vif", vif.mp_mon);
#     32                                                 //$dumpfile("dump.vcd");
#     33                                                 //$dumpvars;
#     34                                                 end
#     35                                                 
#     36                                                 initial begin
#     37              1                    ***0***       run_test();  
#     38                                                 end
#     39                                                 
#     40                                               endmodule
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                    202         0       202       0.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/ral_top.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
#           7                                   pclk           0           0        0.00 
#           8                                presetn           0           0        0.00 
#           9                                   psel           0           0        0.00 
#          10                                penable           0           0        0.00 
#          11                                 pwrite           0           0        0.00 
#          12                               paddr[9]           0           0        0.00 
#          12                               paddr[8]           0           0        0.00 
#          12                               paddr[7]           0           0        0.00 
#          12                               paddr[6]           0           0        0.00 
#          12                               paddr[5]           0           0        0.00 
#          12                               paddr[4]           0           0        0.00 
#          12                               paddr[3]           0           0        0.00 
#          12                              paddr[31]           0           0        0.00 
#          12                              paddr[30]           0           0        0.00 
#          12                               paddr[2]           0           0        0.00 
#          12                              paddr[29]           0           0        0.00 
#          12                              paddr[28]           0           0        0.00 
#          12                              paddr[27]           0           0        0.00 
#          12                              paddr[26]           0           0        0.00 
#          12                              paddr[25]           0           0        0.00 
#          12                              paddr[24]           0           0        0.00 
#          12                              paddr[23]           0           0        0.00 
#          12                              paddr[22]           0           0        0.00 
#          12                              paddr[21]           0           0        0.00 
#          12                              paddr[20]           0           0        0.00 
#          12                               paddr[1]           0           0        0.00 
#          12                              paddr[19]           0           0        0.00 
#          12                              paddr[18]           0           0        0.00 
#          12                              paddr[17]           0           0        0.00 
#          12                              paddr[16]           0           0        0.00 
#          12                              paddr[15]           0           0        0.00 
#          12                              paddr[14]           0           0        0.00 
#          12                              paddr[13]           0           0        0.00 
#          12                              paddr[12]           0           0        0.00 
#          12                              paddr[11]           0           0        0.00 
#          12                              paddr[10]           0           0        0.00 
#          12                               paddr[0]           0           0        0.00 
#          13                              pwdata[9]           0           0        0.00 
#          13                              pwdata[8]           0           0        0.00 
#          13                              pwdata[7]           0           0        0.00 
#          13                              pwdata[6]           0           0        0.00 
#          13                              pwdata[5]           0           0        0.00 
#          13                              pwdata[4]           0           0        0.00 
#          13                              pwdata[3]           0           0        0.00 
#          13                             pwdata[31]           0           0        0.00 
#          13                             pwdata[30]           0           0        0.00 
#          13                              pwdata[2]           0           0        0.00 
#          13                             pwdata[29]           0           0        0.00 
#          13                             pwdata[28]           0           0        0.00 
#          13                             pwdata[27]           0           0        0.00 
#          13                             pwdata[26]           0           0        0.00 
#          13                             pwdata[25]           0           0        0.00 
#          13                             pwdata[24]           0           0        0.00 
#          13                             pwdata[23]           0           0        0.00 
#          13                             pwdata[22]           0           0        0.00 
#          13                             pwdata[21]           0           0        0.00 
#          13                             pwdata[20]           0           0        0.00 
#          13                              pwdata[1]           0           0        0.00 
#          13                             pwdata[19]           0           0        0.00 
#          13                             pwdata[18]           0           0        0.00 
#          13                             pwdata[17]           0           0        0.00 
#          13                             pwdata[16]           0           0        0.00 
#          13                             pwdata[15]           0           0        0.00 
#          13                             pwdata[14]           0           0        0.00 
#          13                             pwdata[13]           0           0        0.00 
#          13                             pwdata[12]           0           0        0.00 
#          13                             pwdata[11]           0           0        0.00 
#          13                             pwdata[10]           0           0        0.00 
#          13                              pwdata[0]           0           0        0.00 
#          14                              prdata[9]           0           0        0.00 
#          14                              prdata[8]           0           0        0.00 
#          14                              prdata[7]           0           0        0.00 
#          14                              prdata[6]           0           0        0.00 
#          14                              prdata[5]           0           0        0.00 
#          14                              prdata[4]           0           0        0.00 
#          14                              prdata[3]           0           0        0.00 
#          14                             prdata[31]           0           0        0.00 
#          14                             prdata[30]           0           0        0.00 
#          14                              prdata[2]           0           0        0.00 
#          14                             prdata[29]           0           0        0.00 
#          14                             prdata[28]           0           0        0.00 
#          14                             prdata[27]           0           0        0.00 
#          14                             prdata[26]           0           0        0.00 
#          14                             prdata[25]           0           0        0.00 
#          14                             prdata[24]           0           0        0.00 
#          14                             prdata[23]           0           0        0.00 
#          14                             prdata[22]           0           0        0.00 
#          14                             prdata[21]           0           0        0.00 
#          14                             prdata[20]           0           0        0.00 
#          14                              prdata[1]           0           0        0.00 
#          14                             prdata[19]           0           0        0.00 
#          14                             prdata[18]           0           0        0.00 
#          14                             prdata[17]           0           0        0.00 
#          14                             prdata[16]           0           0        0.00 
#          14                             prdata[15]           0           0        0.00 
#          14                             prdata[14]           0           0        0.00 
#          14                             prdata[13]           0           0        0.00 
#          14                             prdata[12]           0           0        0.00 
#          14                             prdata[11]           0           0        0.00 
#          14                             prdata[10]           0           0        0.00 
#          14                              prdata[0]           0           0        0.00 
# 
# Total Node Count     =        101 
# Toggled Node Count   =          0 
# Untoggled Node Count =        101 
# 
# Toggle Coverage      =        0.0% (0 of 202 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/backdoor/br1_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           22         0        22       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/backdoor/br1_seq.sv --
# 
#     1                                                
#     2                                                ////////////////////BACKDOOR//////////////////////
#     3                                                
#     4                                                ///////////////////REGISTER 1/////////////////////
#     5                                                
#     6                                                class br1_seq extends uvm_sequence;
#     7               1                    ***0***       `uvm_object_utils(br1_seq)
#     7               2                    ***0***     
#     7               3                    ***0***     
#     7               4                    ***0***     
#     7               5                    ***0***     
#     7               6                    ***0***     
#     7               7                    ***0***     
#     7               8                    ***0***     
#     7               9                    ***0***     
#     7              10                    ***0***     
#     8                                                  reg_block regmodel;
#     9                                                
#     10                                                 function new (string name = "br1_seq"); 
#     11              1                    ***0***         super.new(name); 
#     12                                                 endfunction
#     13                                               
#     14                                                 virtual task body; 
#     15                                                   uvm_status_e status;
#     16                                                   bit [7:0] dv,mv,dout;
#     17                                                   ////////////////////////initial value
#     18              1                    ***0***         dv = regmodel.r1.get();
#     19              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     20              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     21                                               
#     22                                                   ///////////////////////Poke and peek
#     23              1                    ***0***         regmodel.r1.poke(status,8'h11);
#     24              1                    ***0***         dv = regmodel.r1.get();
#     25              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     26              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG1 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     27                                               
#     28              1                    ***0***         regmodel.r1.peek(status,dout);
#     29              1                    ***0***         dv = regmodel.r1.get();
#     30              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG1 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#     32                                                 endtask
#     33                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        16         0        16       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/backdoor/br1_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     7                                    ***0***     Count coming in to IF
#     7               1                    ***0***       `uvm_object_utils(br1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     7                                    ***0***     Count coming in to IF
#     7               2                    ***0***       `uvm_object_utils(br1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     7                                    ***0***     Count coming in to IF
#     7               3                    ***0***       `uvm_object_utils(br1_seq)
#     7               4                    ***0***       `uvm_object_utils(br1_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     7                                    ***0***     Count coming in to IF
#     7               5                    ***0***       `uvm_object_utils(br1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     7                                    ***0***     Count coming in to IF
#     7               6                    ***0***       `uvm_object_utils(br1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     20                                   ***0***     Count coming in to IF
#     20              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     26                                   ***0***     Count coming in to IF
#     26              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG1 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG1 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/backdoor/br1_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/backdoor/br2_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           22         0        22       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/backdoor/br2_seq.sv --
# 
#     1                                                ///////////////////REGISTER 2/////////////////////
#     2                                                
#     3                                                class br2_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(br2_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "br2_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r2.get();
#     16              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ///////////////////////Poke and peek
#     20              1                    ***0***         regmodel.r2.poke(status,8'h22);
#     21              1                    ***0***         dv = regmodel.r2.get();
#     22              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG2 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         regmodel.r2.peek(status,dout);
#     26              1                    ***0***         dv = regmodel.r2.get();
#     27              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG2 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#     29                                                 endtask
#     30                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        16         0        16       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/backdoor/br2_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(br2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(br2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(br2_seq)
#     4               4                    ***0***       `uvm_object_utils(br2_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(br2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(br2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG2 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     28                                   ***0***     Count coming in to IF
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG2 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/backdoor/br2_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/backdoor/br3_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           22         0        22       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/backdoor/br3_seq.sv --
# 
#     1                                                ///////////////////REGISTER 3/////////////////////
#     2                                                
#     3                                                class br3_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(br3_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "br3_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r3.get();
#     16              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ///////////////////////Poke and peek
#     20              1                    ***0***         regmodel.r3.poke(status,8'h33);
#     21              1                    ***0***         dv = regmodel.r3.get();
#     22              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG3 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         regmodel.r3.peek(status,dout);
#     26              1                    ***0***         dv = regmodel.r3.get();
#     27              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG3 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#     29                                                 endtask
#     30                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        16         0        16       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/backdoor/br3_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(br3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(br3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(br3_seq)
#     4               4                    ***0***       `uvm_object_utils(br3_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(br3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(br3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG3 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     28                                   ***0***     Count coming in to IF
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG3 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/backdoor/br3_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/backdoor/br4_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           22         0        22       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/backdoor/br4_seq.sv --
# 
#     1                                                ///////////////////REGISTER 4/////////////////////
#     2                                                
#     3                                                class br4_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(br4_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "br4_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r4.get();
#     16              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ///////////////////////Poke and peek
#     20              1                    ***0***         regmodel.r4.poke(status,8'h44);
#     21              1                    ***0***         dv = regmodel.r4.get();
#     22              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG4 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         regmodel.r4.peek(status,dout);
#     26              1                    ***0***         dv = regmodel.r4.get();
#     27              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG4 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#     29                                                 endtask
#     30                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        16         0        16       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/backdoor/br4_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(br4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(br4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(br4_seq)
#     4               4                    ***0***       `uvm_object_utils(br4_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(br4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(br4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("After poke to REG4 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     28                                   ***0***     Count coming in to IF
#     28              1                    ***0***         `uvm_info("SEQ", $sformatf("After peek from REG4 -> Desired: %0h, Mirrored Value: %0h, peek: %0h", dv, mv, dout), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/backdoor/br4_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/fr1_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           30         0        30       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/fr1_seq.sv --
# 
#     1                                                ///////////////////REGISTER 1/////////////////////
#     2                                                
#     3                                                class fr1_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(fr1_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "fr1_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r1.get();
#     16              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ////////////////// update desire value
#     20              1                    ***0***         regmodel.r1.set(8'h11);
#     21                                               
#     22                                                   ///////////////// get desired and mirrored value
#     23              1                    ***0***         dv = regmodel.r1.get();
#     24              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     26                                               
#     27                                                   ///////////////// update and call write, read methods
#     28              1                    ***0***         regmodel.r1.update(status);
#     29              1                    ***0***         dv = regmodel.r1.get();
#     30              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     32                                               
#     33              1                    ***0***         regmodel.r1.write(status,8'h11);
#     34              1                    ***0***         dv   = regmodel.r1.get();
#     35              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG1 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     37                                               
#     38              1                    ***0***         regmodel.r1.read(status,dout);
#     39              1                    ***0***         dv = regmodel.r1.get();
#     40              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     42                                                 endtask
#     43                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        20         0        20       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/fr1_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(fr1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(fr1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(fr1_seq)
#     4               4                    ***0***       `uvm_object_utils(fr1_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(fr1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(fr1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     25                                   ***0***     Count coming in to IF
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     36                                   ***0***     Count coming in to IF
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG1 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     41                                   ***0***     Count coming in to IF
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/fr1_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/fr2_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           30         0        30       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/fr2_seq.sv --
# 
#     1                                                ///////////////////REGISTER 2/////////////////////
#     2                                                
#     3                                                class fr2_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(fr2_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "fr2_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r2.get();
#     16              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ////////////////// update desire value
#     20              1                    ***0***         regmodel.r2.set(8'h22);
#     21                                               
#     22                                                   ///////////////// get desired and mirrored value
#     23              1                    ***0***         dv = regmodel.r2.get();
#     24              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     26                                               
#     27                                                   ///////////////// update and call write, read methods
#     28              1                    ***0***         regmodel.r2.update(status);
#     29              1                    ***0***         dv = regmodel.r2.get();
#     30              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     32                                               
#     33              1                    ***0***         regmodel.r2.write(status,8'h22);
#     34              1                    ***0***         dv   = regmodel.r2.get();
#     35              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After Write to REG2 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     37                                               
#     38              1                    ***0***         regmodel.r2.read(status,dout);
#     39              1                    ***0***         dv = regmodel.r2.get();
#     40              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("After Read -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     42                                                 endtask
#     43                                               endclass
#     44                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        20         0        20       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/fr2_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(fr2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(fr2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(fr2_seq)
#     4               4                    ***0***       `uvm_object_utils(fr2_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(fr2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(fr2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     25                                   ***0***     Count coming in to IF
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     36                                   ***0***     Count coming in to IF
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After Write to REG2 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     41                                   ***0***     Count coming in to IF
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("After Read -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/fr2_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/fr3_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           30         0        30       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/fr3_seq.sv --
# 
#     1                                                ///////////////////REGISTER 3/////////////////////
#     2                                                
#     3                                                class fr3_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(fr3_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "fr3_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r3.get();
#     16              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ////////////////// update desire value
#     20              1                    ***0***         regmodel.r3.set(8'h33);
#     21                                               
#     22                                                   ///////////////// get desired and mirrored value
#     23              1                    ***0***         dv = regmodel.r3.get();
#     24              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     26                                               
#     27                                                   ///////////////// update and call write, read methods
#     28              1                    ***0***         regmodel.r3.update(status);
#     29              1                    ***0***         dv = regmodel.r3.get();
#     30              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     32                                               
#     33              1                    ***0***         regmodel.r3.write(status,8'h33);
#     34              1                    ***0***         dv   = regmodel.r3.get();
#     35              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG3 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     37                                               
#     38              1                    ***0***         regmodel.r3.read(status,dout);
#     39              1                    ***0***         dv = regmodel.r3.get();
#     40              1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     42                                                 endtask
#     43                                               endclass
#     44                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        20         0        20       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/fr3_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(fr3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(fr3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(fr3_seq)
#     4               4                    ***0***       `uvm_object_utils(fr3_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(fr3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(fr3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     25                                   ***0***     Count coming in to IF
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     36                                   ***0***     Count coming in to IF
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG3 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     41                                   ***0***     Count coming in to IF
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/fr3_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/fr4_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           30         0        30       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/fr4_seq.sv --
# 
#     1                                                ///////////////////REGISTER 4/////////////////////
#     2                                                
#     3                                                class fr4_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(fr4_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "fr4_seq"); 
#     8               1                    ***0***         super.new(name); 
#     9                                                  endfunction
#     10                                               
#     11                                                 virtual task body; 
#     12                                                   uvm_status_e status;
#     13                                                   bit [7:0] dv,mv,dout;
#     14                                                   ////////////////////////initial value
#     15              1                    ***0***         dv = regmodel.r4.get();
#     16              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     18                                               
#     19                                                   ////////////////// update desire value
#     20              1                    ***0***         regmodel.r4.set(8'h44);
#     21                                               
#     22                                                   ///////////////// get desired and mirrored value
#     23              1                    ***0***         dv = regmodel.r4.get();
#     24              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     26                                               
#     27                                                   ///////////////// update and call write, read methods
#     28              1                    ***0***         regmodel.r4.update(status);
#     29              1                    ***0***         dv = regmodel.r4.get();
#     30              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     32                                               
#     33              1                    ***0***         regmodel.r4.write(status,8'h44);
#     34              1                    ***0***         dv   = regmodel.r4.get();
#     35              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG4 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#     37                                               
#     38              1                    ***0***         regmodel.r4.read(status,dout);
#     39              1                    ***0***         dv = regmodel.r4.get();
#     40              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#     42                                                 endtask
#     43                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        20         0        20       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/fr4_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(fr4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(fr4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(fr4_seq)
#     4               4                    ***0***       `uvm_object_utils(fr4_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(fr4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(fr4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     25                                   ***0***     Count coming in to IF
#     25              1                    ***0***         `uvm_info("SEQ", $sformatf("After Set -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     31                                   ***0***     Count coming in to IF
#     31              1                    ***0***         `uvm_info("SEQ", $sformatf("After Update -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     36                                   ***0***     Count coming in to IF
#     36              1                    ***0***         `uvm_info("SEQ", $sformatf("After write to REG4 -> Desired Value: %0h, Mirrored Value: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     41                                   ***0***     Count coming in to IF
#     41              1                    ***0***         `uvm_info("SEQ", $sformatf("Initial Value -> Desired Value: %0h, Mirrored Value: %0h", dv, mv),UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/fr4_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/rst1_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           23         0        23       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/rst1_seq.sv --
# 
#     1                                                /////////////////REGISTER 1//////////////////
#     2                                                
#     3                                                class rst1_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(rst1_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "rst1_seq");
#     8               1                    ***0***         super.new(name);
#     9                                                  endfunction
#     10                                               
#     11                                                 task body;
#     12                                                   uvm_status_e status;
#     13                                                   bit [31:0] dv, mv, dout, rst_reg;
#     14                                                   bit rst_status;
#     15                                               
#     16              1                    ***0***         rst_status = regmodel.r1.has_reset();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#     18              1                    ***0***         rst_reg   = regmodel.r1.get_reset();
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG1: %0h", rst_reg), UVM_NONE);
#     20                                               
#     21              1                    ***0***         dv = regmodel.r1.get();
#     22              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG1 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         $display("---------- Applying reset to REG1------------"); 
#     26              1                    ***0***         regmodel.r1.reset();
#     27              1                    ***0***         dv   = regmodel.r1.get();
#     28              1                    ***0***         mv = regmodel.r1.get_mirrored_value();
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG1 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#     30                                               
#     31                                                 endtask
#     32                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        18         0        18       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/rst1_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(rst1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(rst1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(rst1_seq)
#     4               4                    ***0***       `uvm_object_utils(rst1_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(rst1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(rst1_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     19                                   ***0***     Count coming in to IF
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG1: %0h", rst_reg), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG1 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     29                                   ***0***     Count coming in to IF
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG1 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/rst1_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/rst2_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           23         0        23       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/rst2_seq.sv --
# 
#     1                                                /////////////////REGISTER 2//////////////////
#     2                                                
#     3                                                class rst2_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(rst2_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "rst2_seq");
#     8               1                    ***0***         super.new(name);
#     9                                                  endfunction
#     10                                               
#     11                                                 task body;
#     12                                                   uvm_status_e status;
#     13                                                   bit [31:0] dv, mv, dout, rst_reg;
#     14                                                   bit rst_status;
#     15                                               
#     16              1                    ***0***         rst_status = regmodel.r2.has_reset();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#     18              1                    ***0***         rst_reg   = regmodel.r2.get_reset();
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG2: %0h", rst_reg), UVM_NONE);
#     20                                               
#     21              1                    ***0***         dv = regmodel.r2.get();
#     22              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG2 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         $display("---------- Applying reset to REG2------------"); 
#     26              1                    ***0***         regmodel.r2.reset();
#     27              1                    ***0***         dv   = regmodel.r2.get();
#     28              1                    ***0***         mv = regmodel.r2.get_mirrored_value();
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG2 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#     30                                               
#     31                                                 endtask
#     32                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        18         0        18       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/rst2_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(rst2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(rst2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(rst2_seq)
#     4               4                    ***0***       `uvm_object_utils(rst2_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(rst2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(rst2_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     19                                   ***0***     Count coming in to IF
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG2: %0h", rst_reg), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG2 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     29                                   ***0***     Count coming in to IF
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG2 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/rst2_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/rst3_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           28         0        28       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/rst3_seq.sv --
# 
#     1                                                /////////////////REGISTER 3//////////////////
#     2                                                /*
#     3                                                class rst3_seq extends uvm_sequence;
#     4                                                  `uvm_object_utils(rst3_seq)
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "rst3_seq");
#     8                                                    super.new(name);
#     9                                                  endfunction
#     10                                               
#     11                                                 task body;
#     12                                                   uvm_status_e status;
#     13                                                   bit [31:0] dv, mv, dout, rst_reg;
#     14                                                   bit rst_status;
#     15                                               
#     16                                                   rst_status = regmodel.r3.has_reset();
#     17                                                   `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#     18                                                   rst_reg   = regmodel.r3.get_reset();
#     19                                                   `uvm_info("SEQ", $sformatf(" Reset for REG3: %0h", rst_reg), UVM_NONE);
#     20                                               
#     21                                                   dv = regmodel.r3.get();
#     22                                                   mv = regmodel.r3.get_mirrored_value();
#     23                                                   `uvm_info("SEQ", $sformatf("Before reset REG3 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25                                                   $display("---------- Applying reset to REG3------------"); 
#     26                                                   regmodel.r3.reset();
#     27                                                   dv   = regmodel.r3.get();
#     28                                                   mv = regmodel.r3.get_mirrored_value();
#     29                                                   `uvm_info("SEQ", $sformatf("After reset REG3 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#     30                                               
#     31                                                 endtask
#     32                                               endclass
#     33                                               
#     34                                               class rst3_seq extends uvm_sequence;
#     35                                                 `uvm_object_utils(rst3_seq)
#     36                                                 reg_block regmodel;
#     37                                               
#     38                                                 function new (string name = "rst3_seq");
#     39                                                   super.new(name);
#     40                                                 endfunction
#     41                                               
#     42                                                 task body;
#     43                                                   uvm_status_e status;
#     44                                                   uvm_reg_data_t dv, mv, dout, rst_reg;
#     45                                                   bit rst_status;
#     46                                               
#     47                                                   // 1. Check for configured reset value
#     48                                                   rst_status = regmodel.r3.has_reset();
#     49                                                   `uvm_info("SEQ", $sformatf("Reset value present: %0b", rst_status), UVM_LOW);
#     50                                               
#     51                                                   // 2. Get configured reset value
#     52                                                   rst_reg = regmodel.r3.get_reset();
#     53                                                   `uvm_info("SEQ", $sformatf("Configured reset value: 0x%08h", rst_reg), UVM_LOW);
#     54                                               
#     55                                                   // 3. Get desired & mirrored values before reset
#     56                                                   dv = regmodel.r3.get();
#     57                                                   mv = regmodel.r3.get_mirrored_value();
#     58                                                   `uvm_info("SEQ", $sformatf("Before reset - Desired: 0x%08h, Mirrored: 0x%08h", dv, mv), UVM_LOW);
#     59                                               
#     60                                                   // 4. Apply reset to model
#     61                                                   $display("---------- Applying reset to REG3 ------------");
#     62                                                   regmodel.r3.reset();
#     63                                               
#     64                                                   // 5. Use .mirror() to update mirror with DUT value
#     65                                                   regmodel.r3.mirror(status, UVM_CHECK, UVM_FRONTDOOR);
#     66                                               
#     67                                                   // 6. Capture new values
#     68                                                   dv = regmodel.r3.get();                 // Desired value from model
#     69                                                   mv = regmodel.r3.get_mirrored_value();  // Updated mirrored value
#     70                                                   dout = mv;                              // Can also log separately if needed
#     71                                               
#     72                                                   `uvm_info("SEQ", $sformatf("After reset - Desired: 0x%08h, Mirrored (DUT): 0x%08h", dv, mv), UVM_LOW);
#     73                                               
#     74                                                   // Optional check
#     75                                                   if (mv !== rst_reg) begin
#     76                                                     `uvm_error("SEQ", $sformatf("Reset mismatch: DUT = 0x%08h, Expected = 0x%08h", mv, rst_reg));
#     77                                                   end
#     78                                                 endtask
#     79                                               endclass */
#     80                                               
#     81                                               class rst3_seq extends uvm_sequence;
#     82              1                    ***0***       `uvm_object_utils(rst3_seq)
#     82              2                    ***0***     
#     82              3                    ***0***     
#     82              4                    ***0***     
#     82              5                    ***0***     
#     82              6                    ***0***     
#     82              7                    ***0***     
#     82              8                    ***0***     
#     82              9                    ***0***     
#     82             10                    ***0***     
#     83                                                 reg_block regmodel;
#     84                                               
#     85                                                 function new (string name = "rst3_seq");
#     86              1                    ***0***         super.new(name);
#     87                                                 endfunction
#     88                                               
#     89                                                 task body;
#     90                                                   uvm_status_e status;
#     91                                                   uvm_reg_data_t dv, mv, dout, rst_reg;
#     92                                                   bit rst_status;
#     93                                               
#     94                                                   // 1. Check if reset value is defined in the RAL
#     95              1                    ***0***         rst_status = regmodel.r3.has_reset();
#     96              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset value present in RAL model: %0b", rst_status), UVM_LOW);
#     97                                               
#     98                                                   // 2. Get reset value from RAL model
#     99              1                    ***0***         rst_reg = regmodel.r3.get_reset();
#     100             1                    ***0***         `uvm_info("SEQ", $sformatf("Configured RAL reset value for reg3: 0x%08h", rst_reg), UVM_LOW);
#     101                                              
#     102                                                  // 3. Print values before reset
#     103             1                    ***0***         dv = regmodel.r3.get();
#     104             1                    ***0***         mv = regmodel.r3.get_mirrored_value();
#     105             1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset -> Desired: 0x%08h, Mirrored: 0x%08h", dv, mv), UVM_LOW);
#     106                                              
#     107                                                  // 4. Apply reset in the RAL model
#     108             1                    ***0***         $display("---------- Applying reset to REG3 (RAL model) ------------");
#     109             1                    ***0***         regmodel.r3.reset();  // updates desired value in RAL to reset
#     110                                              
#     111                                                  // 5. Read the value from the DUT and update mirror
#     112             1                    ***0***         regmodel.r3.mirror(status, UVM_CHECK, UVM_FRONTDOOR);
#     113                                              
#     114                                                  if (status != UVM_IS_OK) begin
#     115             1                    ***0***           `uvm_error("SEQ", "Frontdoor mirror failed  check bus transaction or address mapping.");
#     116                                                  end
#     117                                              
#     118                                                  // 6. Fetch values after reset and DUT read
#     119             1                    ***0***         dv = regmodel.r3.get();                 // Desired (reset) value from RAL model
#     120             1                    ***0***         mv = regmodel.r3.get_mirrored_value();  // Value read from DUT via mirror
#     121             1                    ***0***         dout = mv;                              // Alias for clarity
#     122                                              
#     123             1                    ***0***         `uvm_info("SEQ", $sformatf("After reset -> Desired: 0x%08h, Mirrored (DUT): 0x%08h", dv, dout), UVM_LOW);
#     124                                              
#     125                                                  // 7. Compare actual DUT value with expected reset value
#     126                                                  if (dout !== rst_reg) begin
#     127             1                    ***0***           `uvm_error("SEQ", $sformatf("Reset mismatch: DUT read = 0x%08h, Expected (RAL) = 0x%08h", dout, rst_reg));
#     128                                                  end else begin
#     129             1                    ***0***           `uvm_info("SEQ", "Reset verification for REG3 passed!", UVM_LOW);
#     130                                                  end
#     131                                                endtask
#     132                                              endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        28         0        28       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/rst3_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     82                                   ***0***     Count coming in to IF
#     82              1                    ***0***       `uvm_object_utils(rst3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     82                                   ***0***     Count coming in to IF
#     82              2                    ***0***       `uvm_object_utils(rst3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     82                                   ***0***     Count coming in to IF
#     82              3                    ***0***       `uvm_object_utils(rst3_seq)
#     82              4                    ***0***       `uvm_object_utils(rst3_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     82                                   ***0***     Count coming in to IF
#     82              5                    ***0***       `uvm_object_utils(rst3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     82                                   ***0***     Count coming in to IF
#     82              6                    ***0***       `uvm_object_utils(rst3_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     96                                   ***0***     Count coming in to IF
#     96              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset value present in RAL model: %0b", rst_status), UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     100                                  ***0***     Count coming in to IF
#     100             1                    ***0***         `uvm_info("SEQ", $sformatf("Configured RAL reset value for reg3: 0x%08h", rst_reg), UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     105                                  ***0***     Count coming in to IF
#     105             1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset -> Desired: 0x%08h, Mirrored: 0x%08h", dv, mv), UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     114                                  ***0***     Count coming in to IF
#     114             1                    ***0***         if (status != UVM_IS_OK) begin
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     115                                  ***0***     Count coming in to IF
#     115             1                    ***0***           `uvm_error("SEQ", "Frontdoor mirror failed  check bus transaction or address mapping.");
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     123                                  ***0***     Count coming in to IF
#     123             1                    ***0***         `uvm_info("SEQ", $sformatf("After reset -> Desired: 0x%08h, Mirrored (DUT): 0x%08h", dv, dout), UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     126                                  ***0***     Count coming in to IF
#     126             1                    ***0***         if (dout !== rst_reg) begin
#     128             1                    ***0***         end else begin
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     127                                  ***0***     Count coming in to IF
#     127             1                    ***0***           `uvm_error("SEQ", $sformatf("Reset mismatch: DUT read = 0x%08h, Expected (RAL) = 0x%08h", dout, rst_reg));
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     129                                  ***0***     Count coming in to IF
#     129             1                    ***0***           `uvm_info("SEQ", "Reset verification for REG3 passed!", UVM_LOW);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/rst3_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/sequences/frontdoor/rst4_seq.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           23         0        23       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/sequences/frontdoor/rst4_seq.sv --
# 
#     1                                                /////////////////REGISTER 4//////////////////
#     2                                                
#     3                                                class rst4_seq extends uvm_sequence;
#     4               1                    ***0***       `uvm_object_utils(rst4_seq)
#     4               2                    ***0***     
#     4               3                    ***0***     
#     4               4                    ***0***     
#     4               5                    ***0***     
#     4               6                    ***0***     
#     4               7                    ***0***     
#     4               8                    ***0***     
#     4               9                    ***0***     
#     4              10                    ***0***     
#     5                                                  reg_block regmodel;
#     6                                                
#     7                                                  function new (string name = "rst4_seq");
#     8               1                    ***0***         super.new(name);
#     9                                                  endfunction
#     10                                               
#     11                                                 task body;
#     12                                                   uvm_status_e status;
#     13                                                   bit [31:0] dv, mv, dout, rst_reg;
#     14                                                   bit rst_status;
#     15                                               
#     16              1                    ***0***         rst_status = regmodel.r4.has_reset();
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#     18              1                    ***0***         rst_reg   = regmodel.r4.get_reset();
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG4: %0h", rst_reg), UVM_NONE);
#     20                                               
#     21              1                    ***0***         dv = regmodel.r4.get();
#     22              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG4 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#     24                                               
#     25              1                    ***0***         $display("---------- Applying reset to REG4------------"); 
#     26              1                    ***0***         regmodel.r4.reset();
#     27              1                    ***0***         dv = regmodel.r4.get();
#     28              1                    ***0***         mv = regmodel.r4.get_mirrored_value();
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG4 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#     30                                               
#     31                                                 endtask
#     32                                               endclass
#     33                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                        18         0        18       0.0
# 
# ================================Branch Details================================
# 
# Branch Coverage for file ../src/testbench/sequences/frontdoor/rst4_seq.sv --
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               1                    ***0***       `uvm_object_utils(rst4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               2                    ***0***       `uvm_object_utils(rst4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               3                    ***0***       `uvm_object_utils(rst4_seq)
#     4               4                    ***0***       `uvm_object_utils(rst4_seq)
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               5                    ***0***       `uvm_object_utils(rst4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     4                                    ***0***     Count coming in to IF
#     4               6                    ***0***       `uvm_object_utils(rst4_seq)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     17                                   ***0***     Count coming in to IF
#     17              1                    ***0***         `uvm_info("SEQ", $sformatf("Reset Value is present: %0h ", rst_status), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     19                                   ***0***     Count coming in to IF
#     19              1                    ***0***         `uvm_info("SEQ", $sformatf(" Reset for REG4: %0h", rst_reg), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     23                                   ***0***     Count coming in to IF
#     23              1                    ***0***         `uvm_info("SEQ", $sformatf("Before reset REG4 -> Desired: %0h, Mirrored: %0h", dv, mv), UVM_NONE);
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# ------------------------------------IF Branch------------------------------------
#     29                                   ***0***     Count coming in to IF
#     29              1                    ***0***         `uvm_info("SEQ", $sformatf("After reset REG4 -> Desired: %0h, Mirrored: %0h, Read: %0h", dv, mv,dout), UVM_NONE)
#                                          ***0***     All False Count
# Branch totals: 0 hits of 2 branches = 0.0%
# 
# 
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/sequences/frontdoor/rst4_seq.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/br1_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/br1_test.sv --
# 
#     1                                                class br1_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(br1_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "br1_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 br1_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = br1_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
#     26                                               
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/br1_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/br2_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/br2_test.sv --
# 
#     1                                                class br2_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(br2_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "br2_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 br2_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = br2_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/br2_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/br3_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/br3_test.sv --
# 
#     1                                                class br3_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(br3_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "br3_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 br3_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = br3_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/br3_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/br4_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/br4_test.sv --
# 
#     1                                                class br4_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(br4_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "br4_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 br4_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = br4_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/br4_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/fr1_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/fr1_test.sv --
# 
#     1                                                class fr1_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(fr1_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "fr1_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 fr1_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = fr1_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/fr1_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/fr2_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/fr2_test.sv --
# 
#     1                                                class fr2_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(fr2_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "fr2_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 fr2_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = fr2_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/fr2_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/fr3_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/fr3_test.sv --
# 
#     1                                                class fr3_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(fr3_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "fr3_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 fr3_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = fr3_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/fr3_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/fr4_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/fr4_test.sv --
# 
#     1                                                class fr4_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(fr4_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "fr4_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 fr4_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = fr4_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/fr4_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/freg_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           54         0        54       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/freg_test.sv --
# 
#     1                                                /*class freg_test extends uvm_test;
#     2                                                
#     3                                                `uvm_component_utils(freg_test)
#     4                                                
#     5                                                  function new(string name = "freg_test", uvm_component parent = null);
#     6                                                    super.new(name,parent);
#     7                                                  endfunction
#     8                                                
#     9                                                  ral_env env;
#     10                                                 freg_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13                                                   super.build_phase(phase);
#     14                                                   env = ral_env::type_id::create("env",this);
#     15                                                   seq = freg_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19                                                   phase.raise_objection(this);
#     20                                                   seq.regmodel = env.regmodel;
#     21                                                   seq.start(env.agent.seqr);
#     22                                                   phase.drop_objection(this);
#     23                                                   phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass*/
#     26                                               
#     27                                               
#     28                                               class freg_test extends uvm_test;
#     29                                               
#     30              1                    ***0***       `uvm_component_utils(freg_test)
#     30              2                    ***0***     
#     30              3                    ***0***     
#     31                                               
#     32                                                 rst1_seq seq1;
#     33                                                 rst2_seq seq2;
#     34                                                 rst3_seq seq3;
#     35                                                 rst4_seq seq4;
#     36                                                 fr1_seq seq5; 
#     37                                                 fr2_seq seq6;
#     38                                                 fr3_seq seq7;
#     39                                                 fr4_seq seq8;
#     40                                               
#     41                                                 ral_env env;
#     42                                               
#     43                                                 /*
#     44                                                 apb_slave_toggle slave_toggle_pkt;
#     45                                               
#     46                                                 apb_transfer_invalid transfer_invalid_pkt;*/
#     47                                               
#     48                                                 function new(string name = "freg_test", uvm_component parent = null);
#     49              1                    ***0***         super.new(name, parent);
#     50                                                 endfunction	
#     51                                               
#     52                                                 //defining build phase
#     53                                                 virtual function void build_phase(uvm_phase phase);
#     54              1                    ***0***         super.build_phase(phase);
#     55              1                    ***0***         env = ral_env::type_id::create("env",this);
#     56                                               
#     57                                               
#     58              1                    ***0***         seq1 = rst1_seq::type_id::create("seq1", this);
#     59              1                    ***0***         seq2 = rst2_seq::type_id::create("seq2", this);
#     60              1                    ***0***         seq3 = rst3_seq::type_id::create("seq3", this);
#     61              1                    ***0***         seq4 = rst4_seq::type_id::create("seq4", this);
#     62              1                    ***0***         seq5 = fr1_seq::type_id::create("seq5", this);
#     63              1                    ***0***         seq6 = fr2_seq::type_id::create("seq6", this);
#     64              1                    ***0***         seq7 = fr3_seq::type_id::create("seq7", this);
#     65              1                    ***0***         seq8 = fr4_seq::type_id::create("seq8", this);
#     66                                                   
#     67                                                   /*
#     68                                                   slave_toggle_pkt     = apb_slave_toggle::type_id::create("slave_toggle_pkt", this);
#     69                                                   transfer_invalid_pkt = apb_transfer_invalid::type_id::create("transfer_invalid_pkt", this);*/
#     70                                                 endfunction
#     71                                               
#     72                                                 virtual task run_phase(uvm_phase phase);
#     73              1                    ***0***         phase.raise_objection(this);
#     74              1                    ***0***         seq1.regmodel = env.regmodel;
#     75              1                    ***0***         seq1.start(env.agent.seqr);
#     76              1                    ***0***         phase.drop_objection(this);
#     77              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     78                                               
#     79              1                    ***0***         phase.raise_objection(this);
#     80              1                    ***0***         seq2.regmodel = env.regmodel;
#     81              1                    ***0***         seq2.start(env.agent.seqr);
#     82              1                    ***0***         phase.drop_objection(this);
#     83              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     84                                               
#     85              1                    ***0***         phase.raise_objection(this);
#     86              1                    ***0***         seq3.regmodel = env.regmodel;
#     87              1                    ***0***         seq3.start(env.agent.seqr);
#     88              1                    ***0***         phase.drop_objection(this);
#     89              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     90                                               
#     91              1                    ***0***         phase.raise_objection(this);
#     92              1                    ***0***         seq4.regmodel = env.regmodel;
#     93              1                    ***0***         seq4.start(env.agent.seqr);
#     94              1                    ***0***         phase.drop_objection(this);
#     95              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     96                                                 
#     97              1                    ***0***         phase.raise_objection(this);
#     98              1                    ***0***         seq5.regmodel = env.regmodel;
#     99              1                    ***0***         seq5.start(env.agent.seqr);
#     100             1                    ***0***         phase.drop_objection(this);
#     101             1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     102                                              
#     103             1                    ***0***         phase.raise_objection(this);
#     104             1                    ***0***         seq6.regmodel = env.regmodel;
#     105             1                    ***0***         seq6.start(env.agent.seqr);
#     106             1                    ***0***         phase.drop_objection(this);
#     107             1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     108                                              
#     109             1                    ***0***         phase.raise_objection(this);
#     110             1                    ***0***         seq7.regmodel = env.regmodel;
#     111             1                    ***0***         seq7.start(env.agent.seqr);
#     112             1                    ***0***         phase.drop_objection(this);
#     113             1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     114                                                
#     115             1                    ***0***         phase.raise_objection(this);
#     116             1                    ***0***         seq8.regmodel = env.regmodel;
#     117             1                    ***0***         seq8.start(env.agent.seqr);
#     118             1                    ***0***         phase.drop_objection(this);
#     119             1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     120                                                endtask
#     121                                              
#     122                                              endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/freg_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/rst1_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/rst1_test.sv --
# 
#     1                                                class rst1_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(rst1_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "rst1_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                  
#     9                                                  ral_env env;
#     10                                                 rst1_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = rst1_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/rst1_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/rst2_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/rst2_test.sv --
# 
#     1                                                class rst2_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(rst2_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "rst2_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                  
#     9                                                  ral_env env;
#     10                                                 rst2_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = rst2_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/rst2_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/rst3_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/rst3_test.sv --
# 
#     1                                                class rst3_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(rst3_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "rst3_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                  
#     9                                                  ral_env env;
#     10                                                 rst3_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = rst3_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/rst3_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# =================================================================================
# === File: ../src/testbench/tests/rst4_test.sv
# =================================================================================
# Statement Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Stmts                           12         0        12       0.0
# 
# ================================Statement Details================================
# 
# Statement Coverage for file ../src/testbench/tests/rst4_test.sv --
# 
#     1                                                class rst4_test extends uvm_test;
#     2                                                
#     3               1                    ***0***     `uvm_component_utils(rst4_test)
#     3               2                    ***0***     
#     3               3                    ***0***     
#     4                                                
#     5                                                  function new(string name = "rst4_test", uvm_component parent = null);
#     6               1                    ***0***         super.new(name,parent);
#     7                                                  endfunction
#     8                                                  
#     9                                                  ral_env env;
#     10                                                 rst4_seq seq;
#     11                                               
#     12                                                 virtual function void build_phase(uvm_phase phase);
#     13              1                    ***0***         super.build_phase(phase);
#     14              1                    ***0***         env = ral_env::type_id::create("env",this);
#     15              1                    ***0***         seq = rst4_seq::type_id::create("seq",this);
#     16                                                 endfunction
#     17                                               
#     18                                                 virtual task run_phase(uvm_phase phase);
#     19              1                    ***0***         phase.raise_objection(this);
#     20              1                    ***0***         seq.regmodel = env.regmodel;
#     21              1                    ***0***         seq.start(env.agent.seqr);
#     22              1                    ***0***         phase.drop_objection(this);
#     23              1                    ***0***         phase.phase_done.set_drain_time(this, 20);
#     24                                                 endtask
#     25                                               endclass
# 
# Branch Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Branches                         0         0         0     100.0
# Condition Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Condition Terms              0         0         0     100.0
# Expression Coverage:
#     Enabled Coverage            Active   Covered    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FEC Expression Terms             0         0         0     100.0
# FSM Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     FSMs                                                       100.0
#         States                       0         0         0     100.0
#         Transitions                  0         0         0     100.0
# Toggle Coverage:
#     Enabled Coverage            Active      Hits    Misses % Covered
#     ----------------            ------      ----    ------ ---------
#     Toggle Bins                      0         0         0     100.0
# 
# ================================Toggle Details================================
# 
# Toggle Coverage for File ../src/testbench/tests/rst4_test.sv --
# 
#        Line                                   Node      1H->0L      0L->1H  "Coverage"
# --------------------------------------------------------------------------------------
# 
# Total Node Count     =          0 
# Toggled Node Count   =          0 
# Untoggled Node Count =          0 
# 
# Toggle Coverage      =      100.0% (0 of 0 bins)
# 
# 
# Total Coverage By File (code coverage only, filtered view): 0.0%
# 
# 
# run -all
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(215) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(217) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test freg_test...
# include_coverage not located
#   did you mean recording_detail?
# UVM_INFO ../src/testbench/sequences/frontdoor/rst1_seq.sv(17) @ 0: uvm_test_top.env.agent.seqr@@seq1 [SEQ] Reset Value is present: 1 
# UVM_INFO ../src/testbench/sequences/frontdoor/rst1_seq.sv(19) @ 0: uvm_test_top.env.agent.seqr@@seq1 [SEQ]  Reset for REG1: a5a50000
# UVM_INFO ../src/testbench/sequences/frontdoor/rst1_seq.sv(23) @ 0: uvm_test_top.env.agent.seqr@@seq1 [SEQ] Before reset REG1 -> Desired: 0, Mirrored: 0
# ---------- Applying reset to REG1------------
# UVM_INFO ../src/testbench/sequences/frontdoor/rst1_seq.sv(29) @ 0: uvm_test_top.env.agent.seqr@@seq1 [SEQ] After reset REG1 -> Desired: a5a50000, Mirrored: a5a50000, Read: 0
# UVM_INFO ../src/testbench/sequences/frontdoor/rst2_seq.sv(17) @ 0: uvm_test_top.env.agent.seqr@@seq2 [SEQ] Reset Value is present: 1 
# UVM_INFO ../src/testbench/sequences/frontdoor/rst2_seq.sv(19) @ 0: uvm_test_top.env.agent.seqr@@seq2 [SEQ]  Reset for REG2: 12349876
# UVM_INFO ../src/testbench/sequences/frontdoor/rst2_seq.sv(23) @ 0: uvm_test_top.env.agent.seqr@@seq2 [SEQ] Before reset REG2 -> Desired: 0, Mirrored: 0
# ---------- Applying reset to REG2------------
# UVM_INFO ../src/testbench/sequences/frontdoor/rst2_seq.sv(29) @ 0: uvm_test_top.env.agent.seqr@@seq2 [SEQ] After reset REG2 -> Desired: 12349876, Mirrored: 12349876, Read: 0
# UVM_INFO ../src/testbench/sequences/frontdoor/rst3_seq.sv(96) @ 0: uvm_test_top.env.agent.seqr@@seq3 [SEQ] Reset value present in RAL model: 1
# UVM_INFO ../src/testbench/sequences/frontdoor/rst3_seq.sv(100) @ 0: uvm_test_top.env.agent.seqr@@seq3 [SEQ] Configured RAL reset value for reg3: 0x5a5a5555
# UVM_INFO ../src/testbench/sequences/frontdoor/rst3_seq.sv(105) @ 0: uvm_test_top.env.agent.seqr@@seq3 [SEQ] Before reset -> Desired: 0x00000000, Mirrored: 0x00000000
# ---------- Applying reset to REG3 (RAL model) ------------
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 10: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = 0, Data = 0
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 30: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 0
# UVM_INFO ../src/testbench/ral_driver.sv(60) @ 50: uvm_test_top.env.agent.drv [DRV] Rdata : 0, Addr : c
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 50: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 0
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 70: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @740                       
#   begin_time                   time          64    0                          
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_ERROR verilog_src/uvm-1.1d/src/reg/uvm_reg.svh(2890) @ 70: reporter [RegModel] Register "regmodel.r3" value read from DUT (0x0000000000000000) does not match mirrored value (0x000000005a5a5555)
# UVM_INFO verilog_src/uvm-1.1d/src/reg/uvm_reg.svh(2909) @ 70: reporter [RegModel] Field reg3_field (regmodel.r3[31:0]) mismatch read=32'h0 mirrored=32'h5a5a5555 
# UVM_INFO ../src/testbench/sequences/frontdoor/rst3_seq.sv(123) @ 70: uvm_test_top.env.agent.seqr@@seq3 [SEQ] After reset -> Desired: 0x00000000, Mirrored (DUT): 0x00000000
# UVM_ERROR ../src/testbench/sequences/frontdoor/rst3_seq.sv(127) @ 70: uvm_test_top.env.agent.seqr@@seq3 [SEQ] Reset mismatch: DUT read = 0x00000000, Expected (RAL) = 0x5a5a5555
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 70: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 0
# UVM_INFO ../src/testbench/sequences/frontdoor/rst4_seq.sv(17) @ 70: uvm_test_top.env.agent.seqr@@seq4 [SEQ] Reset Value is present: 1 
# UVM_INFO ../src/testbench/sequences/frontdoor/rst4_seq.sv(19) @ 70: uvm_test_top.env.agent.seqr@@seq4 [SEQ]  Reset for REG4: ffff
# UVM_INFO ../src/testbench/sequences/frontdoor/rst4_seq.sv(23) @ 70: uvm_test_top.env.agent.seqr@@seq4 [SEQ] Before reset REG4 -> Desired: 0, Mirrored: 0
# ---------- Applying reset to REG4------------
# UVM_INFO ../src/testbench/sequences/frontdoor/rst4_seq.sv(29) @ 70: uvm_test_top.env.agent.seqr@@seq4 [SEQ] After reset REG4 -> Desired: ffff, Mirrored: ffff, Read: 0
# UVM_INFO ../src/testbench/sequences/frontdoor/fr1_seq.sv(17) @ 70: uvm_test_top.env.agent.seqr@@seq5 [SEQ] Initial Value -> Desired Value: 0, Mirrored Value: 0
# UVM_INFO ../src/testbench/sequences/frontdoor/fr1_seq.sv(25) @ 70: uvm_test_top.env.agent.seqr@@seq5 [SEQ] After Set -> Desired Value: 11, Mirrored Value: 0
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 90: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 0
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 110: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 130: uvm_test_top.env.agent.drv [DRV] Wdata : 11, Addr : 4
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 130: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 150: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @774                       
#   begin_time                   time          64    70                         
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr1_seq.sv(31) @ 150: uvm_test_top.env.agent.seqr@@seq5 [SEQ] After Update -> Desired Value: 11, Mirrored Value: 11
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 150: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 170: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 190: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 210: uvm_test_top.env.agent.drv [DRV] Wdata : 11, Addr : 4
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 210: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 230: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @786                       
#   begin_time                   time          64    150                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr1_seq.sv(36) @ 230: uvm_test_top.env.agent.seqr@@seq5 [SEQ] After write to REG1 -> Desired Value: 11, Mirrored Value: 11
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 230: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 250: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 4, Data = 11
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 270: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 4, Expected = 11, Received = 0
# UVM_INFO ../src/testbench/ral_driver.sv(60) @ 290: uvm_test_top.env.agent.drv [DRV] Rdata : 0, Addr : 4
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 290: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 4, Expected = 11, Received = 0
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 310: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @798                       
#   begin_time                   time          64    230                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr1_seq.sv(41) @ 310: uvm_test_top.env.agent.seqr@@seq5 [SEQ] Initial Value -> Desired Value: 55, Mirrored Value: 55
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 310: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 4, Expected = 11, Received = 5a5a5555
# UVM_INFO ../src/testbench/sequences/frontdoor/fr2_seq.sv(17) @ 310: uvm_test_top.env.agent.seqr@@seq6 [SEQ] Initial Value -> Desired Value: 76, Mirrored Value: 76
# UVM_INFO ../src/testbench/sequences/frontdoor/fr2_seq.sv(25) @ 310: uvm_test_top.env.agent.seqr@@seq6 [SEQ] After Set -> Desired Value: 22, Mirrored Value: 76
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 330: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 4, Expected = 11, Received = 5a5a5555
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 350: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 370: uvm_test_top.env.agent.drv [DRV] Wdata : 22, Addr : 8
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 370: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 390: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @810                       
#   begin_time                   time          64    310                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr2_seq.sv(31) @ 390: uvm_test_top.env.agent.seqr@@seq6 [SEQ] After Update -> Desired Value: 22, Mirrored Value: 22
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 390: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 410: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 430: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 450: uvm_test_top.env.agent.drv [DRV] Wdata : 22, Addr : 8
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 450: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 470: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @822                       
#   begin_time                   time          64    390                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr2_seq.sv(36) @ 470: uvm_test_top.env.agent.seqr@@seq6 [SEQ] After Write to REG2 -> Desired Value: 22, Mirrored Value: 22
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 470: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 490: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 8, Data = 22
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 510: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 8, Expected = 22, Received = 5a5a5555
# UVM_INFO ../src/testbench/ral_driver.sv(60) @ 530: uvm_test_top.env.agent.drv [DRV] Rdata : 5a5a5555, Addr : 8
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 530: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 8, Expected = 22, Received = 5a5a5555
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 550: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @834                       
#   begin_time                   time          64    470                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr2_seq.sv(41) @ 550: uvm_test_top.env.agent.seqr@@seq6 [SEQ] After Read -> Desired Value: 22, Mirrored Value: 22
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 550: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = 8, Data = 22
# UVM_INFO ../src/testbench/sequences/frontdoor/fr3_seq.sv(17) @ 550: uvm_test_top.env.agent.seqr@@seq7 [SEQ] Initial Value -> Desired Value: 0, Mirrored Value: 0
# UVM_INFO ../src/testbench/sequences/frontdoor/fr3_seq.sv(25) @ 550: uvm_test_top.env.agent.seqr@@seq7 [SEQ] After Set -> Desired Value: 33, Mirrored Value: 0
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 570: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = 8, Data = 22
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 590: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 610: uvm_test_top.env.agent.drv [DRV] Wdata : 33, Addr : c
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 610: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 630: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @846                       
#   begin_time                   time          64    550                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr3_seq.sv(31) @ 630: uvm_test_top.env.agent.seqr@@seq7 [SEQ] After Update -> Desired Value: 33, Mirrored Value: 33
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 630: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 650: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 670: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 690: uvm_test_top.env.agent.drv [DRV] Wdata : 33, Addr : c
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 690: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 710: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @858                       
#   begin_time                   time          64    630                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr3_seq.sv(36) @ 710: uvm_test_top.env.agent.seqr@@seq7 [SEQ] After write to REG3 -> Desired Value: 33, Mirrored Value: 33
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 710: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 730: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = c, Data = 33
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 750: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = c, Expected = 33, Received = 22
# UVM_INFO ../src/testbench/ral_driver.sv(60) @ 770: uvm_test_top.env.agent.drv [DRV] Rdata : 22, Addr : c
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 770: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = c, Expected = 33, Received = 22
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 790: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @870                       
#   begin_time                   time          64    710                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr3_seq.sv(41) @ 790: uvm_test_top.env.agent.seqr@@seq7 [SEQ] Initial Value -> Desired Value: 33, Mirrored Value: 33
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 790: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 33
# UVM_INFO ../src/testbench/sequences/frontdoor/fr4_seq.sv(17) @ 790: uvm_test_top.env.agent.seqr@@seq8 [SEQ] Initial Value -> Desired Value: ff, Mirrored Value: ff
# UVM_INFO ../src/testbench/sequences/frontdoor/fr4_seq.sv(25) @ 790: uvm_test_top.env.agent.seqr@@seq8 [SEQ] After Set -> Desired Value: 44, Mirrored Value: ff
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(34) @ 810: uvm_test_top.env.sb [SCOREBOARD] READ MATCH: Addr = c, Data = 33
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 830: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 850: uvm_test_top.env.agent.drv [DRV] Wdata : 44, Addr : 10
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 850: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 870: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @882                       
#   begin_time                   time          64    790                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr4_seq.sv(31) @ 870: uvm_test_top.env.agent.seqr@@seq8 [SEQ] After Update -> Desired Value: 44, Mirrored Value: 44
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 870: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 890: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 910: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# UVM_INFO ../src/testbench/ral_driver.sv(47) @ 930: uvm_test_top.env.agent.drv [DRV] Wdata : 44, Addr : 10
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 930: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 950: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @894                       
#   begin_time                   time          64    870                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr4_seq.sv(36) @ 950: uvm_test_top.env.agent.seqr@@seq8 [SEQ] After write to REG4 -> Desired Value: 44, Mirrored Value: 44
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 950: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# -------------monitor begin----------
# UVM_INFO ../src/testbench/ral_scb.sv(29) @ 970: uvm_test_top.env.sb [SCOREBOARD] WRITE: Addr = 10, Data = 44
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 990: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 10, Expected = 0, Received = 33
# UVM_INFO ../src/testbench/ral_driver.sv(60) @ 1010: uvm_test_top.env.agent.drv [DRV] Rdata : 33, Addr : 10
# -------------monitor begin----------
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 1010: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 10, Expected = 0, Received = 33
# UVM_INFO ../src/testbench/ral_driver.sv(30) @ 1030: uvm_test_top.env.agent.drv [DRV] Transaction completed: ------------------------------------------------------------------------------
# Name                           Type          Size  Value                      
# ------------------------------------------------------------------------------
# item                           ral_seq_item  -     @906                       
#   begin_time                   time          64    950                        
#   depth                        int           32    'd2                        
#   parent sequence (name)       string        18    default_parent_seq         
#   parent sequence (full name)  string        18    default_parent_seq         
#   sequencer                    string        27    uvm_test_top.env.agent.seqr
# ------------------------------------------------------------------------------
# 
# -------------monitor begin----------
# UVM_INFO ../src/testbench/sequences/frontdoor/fr4_seq.sv(41) @ 1030: uvm_test_top.env.agent.seqr@@seq8 [SEQ] Initial Value -> Desired Value: 44, Mirrored Value: 44
# UVM_ERROR ../src/testbench/ral_scb.sv(32) @ 1030: uvm_test_top.env.sb [SCOREBOARD] Mismatch at Addr = 10, Expected = 0, Received = 44
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1268) @ 1050: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :  108
# UVM_WARNING :    0
# UVM_ERROR :   13
# UVM_FATAL :    0
# ** Report counts by id
# [DRV]    26
# [Questa UVM]     2
# [RNTST]     1
# [RegModel]     2
# [SCOREBOARD]    52
# [SEQ]    37
# [TEST_DONE]     1
# ** Note: $finish    : /tools/mentor/questasim_10.6c/questasim/linux/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 1050 ns  Iteration: 53  Instance: /tb
# Saving coverage database on exit...
# End time: 16:03:22 on Aug 05,2025, Elapsed time: 0:00:04
# Errors: 0, Warnings: 0
